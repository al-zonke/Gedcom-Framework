/*
 This file was autogenerated by tags.py 
 */

#import "GCAssociationRelationship.h"

#import "GCObject_internal.h"

#import "GCNoteEmbeddedAttribute.h"
#import "GCNoteReferenceRelationship.h"
#import "GCRecordTypeAttribute.h"
#import "GCRelationshipDescriptorAttribute.h"
#import "GCSourceCitationRelationship.h"
#import "GCSourceEmbeddedAttribute.h"

@implementation GCAssociationRelationship {
	GCRecordTypeAttribute *_recordType;
	GCRelationshipDescriptorAttribute *_relationshipDescriptor;
	NSMutableArray *_noteReferences;
	NSMutableArray *_noteEmbeddeds;
	NSMutableArray *_sourceCitations;
	NSMutableArray *_sourceEmbeddeds;
}

+ (GCTag *)gedTag
{
	return [GCTag tagWithClassName:@"GCAssociationRelationship"];
}

// Methods:
/** Initializes and returns a association.

 
 @return A new association.
*/
+(GCAssociationRelationship *)association
{
	return [[self alloc] init];
}
- (id)init
{
	self = [super _initWithType:@"association"];
	
	if (self) {
		// initialize ivars, if any:
		_noteReferences = [NSMutableArray array];
		_noteEmbeddeds = [NSMutableArray array];
		_sourceCitations = [NSMutableArray array];
		_sourceEmbeddeds = [NSMutableArray array];
	}
	
	return self;
}


// Properties:
@dynamic recordType;
@dynamic relationshipDescriptor;
@dynamic notes;
@dynamic noteReferences;
@dynamic mutableNoteReferences;
@dynamic noteEmbeddeds;
@dynamic mutableNoteEmbeddeds;
@dynamic sources;
@dynamic sourceCitations;
@dynamic mutableSourceCitations;
@dynamic sourceEmbeddeds;
@dynamic mutableSourceEmbeddeds;

@end

