/*
 This file was autogenerated by tags.py 
 */

#import "GCEventsRecordedAttribute.h"

#import "GCObject_internal.h"

#import "GCDateAttribute.h"
#import "GCPlaceAttribute.h"

@implementation GCEventsRecordedAttribute {
	GCDateAttribute *_date;
	GCPlaceAttribute *_place;
}

+ (GCTag *)gedTag
{
	return [GCTag tagWithClassName:@"GCEventsRecordedAttribute"];
}

// Methods:
/** Initializes and returns a eventsRecorded.

 
 @return A new eventsRecorded.
*/
+(GCEventsRecordedAttribute *)eventsRecorded
{
	return [[self alloc] init];
}
/** Initializes and returns a eventsRecorded.

 @param value The value as a GCValue object.
 @return A new eventsRecorded.
*/
+(GCEventsRecordedAttribute *)eventsRecordedWithValue:(GCValue *)value
{
	return [[self alloc] initWithValue:value];
}
/** Initializes and returns a eventsRecorded.

 @param value The value as an NSString.
 @return A new eventsRecorded.
*/
+(GCEventsRecordedAttribute *)eventsRecordedWithGedcomStringValue:(NSString *)value
{
	return [[self alloc] initWithGedcomStringValue:value];
}
- (id)init
{
	self = [super _initWithType:@"eventsRecorded"];
	
	if (self) {
		// initialize ivars, if any:

	}
	
	return self;
}


// Properties:
@dynamic date;
@dynamic place;

@end

