/*
 This file was autogenerated by tags.py 
 */

#import "GCNoteReferenceRelationship.h"

#import "GCObject_internal.h"
#import "GCProperty_internal.h"

#import "GCSourceCitationRelationship.h"
#import "GCSourceEmbeddedAttribute.h"

@implementation GCNoteReferenceRelationship {
	NSMutableArray *_sourceCitations;
	NSMutableArray *_sourceEmbeddeds;
}

// Methods:
/** Initializes and returns a noteReference.

 
 @return A new noteReference.
*/
+(GCNoteReferenceRelationship *)noteReference
{
	return [[self alloc] init];
}
- (id)init
{
	self = [super _initWithType:@"noteReference"];
	
	if (self) {
		// initialize ivars, if any:
		_sourceCitations = [NSMutableArray array];
		_sourceEmbeddeds = [NSMutableArray array];
	}
	
	return self;
}


// Properties:
@dynamic sources;

- (NSMutableArray *)mutableSourceCitations {
    return [self mutableArrayValueForKey:@"sourceCitations"];
}

- (NSUInteger)countOfSourceCitations {
	return [_sourceCitations count];
}

- (id)objectInSourceCitationsAtIndex:(NSUInteger)index {
    return [_sourceCitations objectAtIndex:index];
}
 
- (void)insertObject:(GCProperty *)obj inSourceCitationsAtIndex:(NSUInteger)index {
	NSParameterAssert([obj isKindOfClass:[GCSourceCitationRelationship class]]);
	if (obj.describedObject == self) {
		return;
	}
	if (obj.describedObject) {
		[obj.describedObject.mutableProperties removeObject:obj];
	}
	obj.describedObject = self;
    [_sourceCitations insertObject:obj atIndex:index];
}

- (void)removeObjectFromSourceCitationsAtIndex:(NSUInteger)index {
	((GCProperty *)_sourceCitations[index]).describedObject = nil;
    [_sourceCitations removeObjectAtIndex:index];
}
	

- (NSMutableArray *)mutableSourceEmbeddeds {
    return [self mutableArrayValueForKey:@"sourceEmbeddeds"];
}

- (NSUInteger)countOfSourceEmbeddeds {
	return [_sourceEmbeddeds count];
}

- (id)objectInSourceEmbeddedsAtIndex:(NSUInteger)index {
    return [_sourceEmbeddeds objectAtIndex:index];
}
 
- (void)insertObject:(GCProperty *)obj inSourceEmbeddedsAtIndex:(NSUInteger)index {
	NSParameterAssert([obj isKindOfClass:[GCSourceEmbeddedAttribute class]]);
	if (obj.describedObject == self) {
		return;
	}
	if (obj.describedObject) {
		[obj.describedObject.mutableProperties removeObject:obj];
	}
	obj.describedObject = self;
    [_sourceEmbeddeds insertObject:obj atIndex:index];
}

- (void)removeObjectFromSourceEmbeddedsAtIndex:(NSUInteger)index {
	((GCProperty *)_sourceEmbeddeds[index]).describedObject = nil;
    [_sourceEmbeddeds removeObjectAtIndex:index];
}
	

@end

