/*
 This file was autogenerated by tags.py 
 */

#import "GCHeaderSourceAttribute.h"

#import "GCObject_internal.h"

#import "GCCorporationAttribute.h"
#import "GCDescriptiveNameAttribute.h"
#import "GCHeaderSourceDataAttribute.h"
#import "GCVersionAttribute.h"

@implementation GCHeaderSourceAttribute {
	GCVersionAttribute *_version;
	GCDescriptiveNameAttribute *_descriptiveName;
	GCCorporationAttribute *_corporation;
	GCHeaderSourceDataAttribute *_headerSourceData;
}

// Methods:
/** Initializes and returns a headerSource.

 
 @return A new headerSource.
*/
+(GCHeaderSourceAttribute *)headerSource
{
	return [[self alloc] init];
}
/** Initializes and returns a headerSource.

 @param value The value as a GCValue object.
 @return A new headerSource.
*/
+(GCHeaderSourceAttribute *)headerSourceWithValue:(GCValue *)value
{
	return [[self alloc] initWithValue:value];
}
/** Initializes and returns a headerSource.

 @param value The value as an NSString.
 @return A new headerSource.
*/
+(GCHeaderSourceAttribute *)headerSourceWithGedcomStringValue:(NSString *)value
{
	return [[self alloc] initWithGedcomStringValue:value];
}
- (id)init
{
	self = [super _initWithType:@"headerSource"];
	
	if (self) {
		// initialize ivars, if any:

	}
	
	return self;
}


// Properties:
@dynamic version;
@dynamic descriptiveName;
@dynamic corporation;
@dynamic headerSourceData;

@end

