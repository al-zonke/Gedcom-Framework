/*
 This file was autogenerated by tags.py 
 */

#import "GCHeaderEntity.h"

#import "GCCharacterSetAttribute.h"
#import "GCCopyrightAttribute.h"
#import "GCDestinationAttribute.h"
#import "GCFileAttribute.h"
#import "GCGedcomAttribute.h"
#import "GCHeaderDateAttribute.h"
#import "GCHeaderSourceAttribute.h"
#import "GCLanguageAttribute.h"
#import "GCNoteEmbeddedAttribute.h"
#import "GCPlaceFormatSpecifierAttribute.h"
#import "GCSubmissionReferenceRelationship.h"
#import "GCSubmitterReferenceRelationship.h"

@implementation GCHeaderEntity {
	GCHeaderSourceAttribute *_headerSource;
	NSMutableArray *_destinations;
	GCHeaderDateAttribute *_headerDate;
	GCSubmitterReferenceRelationship *_submitterReference;
	NSMutableArray *_submissionReferences;
	GCFileAttribute *_file;
	GCCopyrightAttribute *_copyright;
	GCGedcomAttribute *_gedcom;
	GCCharacterSetAttribute *_characterSet;
	GCLanguageAttribute *_language;
	GCPlaceFormatSpecifierAttribute *_placeFormatSpecifier;
	GCNoteEmbeddedAttribute *_noteEmbedded;
}

// Methods:
/// @name Initializing

/** Initializes and returns a header.

 @param context The context in which to create the entity.
 @return A new header.
*/
+(instancetype)headerInContext:(GCContext *)context
{
	return [[self alloc] initInContext:context];
}
- (instancetype)initInContext:(GCContext *)context
{
	self = [super initInContext:context];
	
	if (self) {
		// initialize ivars, if any:
		_destinations = [NSMutableArray array];
		_submissionReferences = [NSMutableArray array];
	}
	
	return self;
}


// Properties:
@dynamic headerSource;
@synthesize destinations = _destinations;

- (NSMutableArray *)mutableDestinations
{
	return [self mutableArrayValueForKey:@"destinations"];
}

@dynamic headerDate;
@dynamic submitterReference;
@synthesize submissionReferences = _submissionReferences;

- (NSMutableArray *)mutableSubmissionReferences
{
	return [self mutableArrayValueForKey:@"submissionReferences"];
}

@dynamic file;
@dynamic copyright;
@dynamic gedcom;
@dynamic characterSet;
@dynamic language;
@dynamic placeFormatSpecifier;
@dynamic noteEmbedded;

@end
