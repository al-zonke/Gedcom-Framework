/*
 This file was autogenerated by tags.py 
 */

#import "GCFamilyRecord.h"

@implementation GCFamilyRecord {
	NSMutableArray *_annulments;
	NSMutableArray *_censuses;
	NSMutableArray *_divorces;
	NSMutableArray *_divorceFileds;
	NSMutableArray *_engagements;
	NSMutableArray *_marriages;
	NSMutableArray *_marriageBanns;
	NSMutableArray *_marriageContracts;
	NSMutableArray *_marriageLicenses;
	NSMutableArray *_marriageSettlements;
	NSMutableArray *_genericEvents;
	GCHusbandRelationship *_husband;
	GCWifeRelationship *_wife;
	NSMutableArray *_children;
	GCNumberOfChildrenAttribute *_numberOfChildren;
	NSMutableArray *_submitterReferences;
	NSMutableArray *_lDSSealingSpouses;
	NSMutableArray *_sourceCitations;
	NSMutableArray *_sourceEmbeddeds;
	NSMutableArray *_multimediaReferences;
	NSMutableArray *_multimediaEmbeddeds;
	NSMutableArray *_noteReferences;
	NSMutableArray *_noteEmbeddeds;
	NSMutableArray *_userReferenceNumbers;
	GCRecordIdNumberAttribute *_recordIdNumber;
	GCChangeInfoAttribute *_changeInfo;
}

// Methods:
/// @name Initializing

/** Initializes and returns a family.

 @param context The context in which to create the entity.
 @return A new family.
*/
+(instancetype)familyInContext:(GCContext *)context
{
	return [[self alloc] initInContext:context];
}
- (instancetype)initInContext:(GCContext *)context
{
	self = [super initInContext:context];
	
	if (self) {
		// initialize ivars, if any:
		_annulments = [NSMutableArray array];
		_censuses = [NSMutableArray array];
		_divorces = [NSMutableArray array];
		_divorceFileds = [NSMutableArray array];
		_engagements = [NSMutableArray array];
		_marriages = [NSMutableArray array];
		_marriageBanns = [NSMutableArray array];
		_marriageContracts = [NSMutableArray array];
		_marriageLicenses = [NSMutableArray array];
		_marriageSettlements = [NSMutableArray array];
		_genericEvents = [NSMutableArray array];
		_children = [NSMutableArray array];
		_submitterReferences = [NSMutableArray array];
		_lDSSealingSpouses = [NSMutableArray array];
		_sourceCitations = [NSMutableArray array];
		_sourceEmbeddeds = [NSMutableArray array];
		_multimediaReferences = [NSMutableArray array];
		_multimediaEmbeddeds = [NSMutableArray array];
		_noteReferences = [NSMutableArray array];
		_noteEmbeddeds = [NSMutableArray array];
		_userReferenceNumbers = [NSMutableArray array];
	}
	
	return self;
}


// Properties:
@dynamic familyEvents;
@synthesize annulments = _annulments;
@dynamic mutableAnnulments;
- (NSMutableArray *)mutableAnnulments
{
	return [self mutableArrayValueForKey:@"annulments"];
}

@synthesize censuses = _censuses;
@dynamic mutableCensuses;
- (NSMutableArray *)mutableCensuses
{
	return [self mutableArrayValueForKey:@"censuses"];
}

@synthesize divorces = _divorces;
@dynamic mutableDivorces;
- (NSMutableArray *)mutableDivorces
{
	return [self mutableArrayValueForKey:@"divorces"];
}

@synthesize divorceFileds = _divorceFileds;
@dynamic mutableDivorceFileds;
- (NSMutableArray *)mutableDivorceFileds
{
	return [self mutableArrayValueForKey:@"divorceFileds"];
}

@synthesize engagements = _engagements;
@dynamic mutableEngagements;
- (NSMutableArray *)mutableEngagements
{
	return [self mutableArrayValueForKey:@"engagements"];
}

@synthesize marriages = _marriages;
@dynamic mutableMarriages;
- (NSMutableArray *)mutableMarriages
{
	return [self mutableArrayValueForKey:@"marriages"];
}

@synthesize marriageBanns = _marriageBanns;
@dynamic mutableMarriageBanns;
- (NSMutableArray *)mutableMarriageBanns
{
	return [self mutableArrayValueForKey:@"marriageBanns"];
}

@synthesize marriageContracts = _marriageContracts;
@dynamic mutableMarriageContracts;
- (NSMutableArray *)mutableMarriageContracts
{
	return [self mutableArrayValueForKey:@"marriageContracts"];
}

@synthesize marriageLicenses = _marriageLicenses;
@dynamic mutableMarriageLicenses;
- (NSMutableArray *)mutableMarriageLicenses
{
	return [self mutableArrayValueForKey:@"marriageLicenses"];
}

@synthesize marriageSettlements = _marriageSettlements;
@dynamic mutableMarriageSettlements;
- (NSMutableArray *)mutableMarriageSettlements
{
	return [self mutableArrayValueForKey:@"marriageSettlements"];
}

@synthesize genericEvents = _genericEvents;
@dynamic mutableGenericEvents;
- (NSMutableArray *)mutableGenericEvents
{
	return [self mutableArrayValueForKey:@"genericEvents"];
}

@dynamic husband;
@dynamic wife;
@synthesize children = _children;
@dynamic mutableChildren;
- (NSMutableArray *)mutableChildren
{
	return [self mutableArrayValueForKey:@"children"];
}

@dynamic numberOfChildren;
@synthesize submitterReferences = _submitterReferences;
@dynamic mutableSubmitterReferences;
- (NSMutableArray *)mutableSubmitterReferences
{
	return [self mutableArrayValueForKey:@"submitterReferences"];
}

@synthesize lDSSealingSpouses = _lDSSealingSpouses;
@dynamic mutableLDSSealingSpouses;
- (NSMutableArray *)mutableLDSSealingSpouses
{
	return [self mutableArrayValueForKey:@"lDSSealingSpouses"];
}

@dynamic sources;
@synthesize sourceCitations = _sourceCitations;
@dynamic mutableSourceCitations;
- (NSMutableArray *)mutableSourceCitations
{
	return [self mutableArrayValueForKey:@"sourceCitations"];
}

@synthesize sourceEmbeddeds = _sourceEmbeddeds;
@dynamic mutableSourceEmbeddeds;
- (NSMutableArray *)mutableSourceEmbeddeds
{
	return [self mutableArrayValueForKey:@"sourceEmbeddeds"];
}

@dynamic multimedias;
@synthesize multimediaReferences = _multimediaReferences;
@dynamic mutableMultimediaReferences;
- (NSMutableArray *)mutableMultimediaReferences
{
	return [self mutableArrayValueForKey:@"multimediaReferences"];
}

@synthesize multimediaEmbeddeds = _multimediaEmbeddeds;
@dynamic mutableMultimediaEmbeddeds;
- (NSMutableArray *)mutableMultimediaEmbeddeds
{
	return [self mutableArrayValueForKey:@"multimediaEmbeddeds"];
}

@dynamic notes;
@synthesize noteReferences = _noteReferences;
@dynamic mutableNoteReferences;
- (NSMutableArray *)mutableNoteReferences
{
	return [self mutableArrayValueForKey:@"noteReferences"];
}

@synthesize noteEmbeddeds = _noteEmbeddeds;
@dynamic mutableNoteEmbeddeds;
- (NSMutableArray *)mutableNoteEmbeddeds
{
	return [self mutableArrayValueForKey:@"noteEmbeddeds"];
}

@synthesize userReferenceNumbers = _userReferenceNumbers;
@dynamic mutableUserReferenceNumbers;
- (NSMutableArray *)mutableUserReferenceNumbers
{
	return [self mutableArrayValueForKey:@"userReferenceNumbers"];
}

@dynamic recordIdNumber;
@dynamic changeInfo;

@end
