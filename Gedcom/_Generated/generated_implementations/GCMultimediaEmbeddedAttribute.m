/*
 This file was autogenerated by tags.py 
 */

#import "GCMultimediaEmbeddedAttribute.h"

#import "GCObject_internal.h"

#import "GCFileAttribute.h"
#import "GCMultimediaFormatAttribute.h"
#import "GCNoteEmbeddedAttribute.h"
#import "GCNoteReferenceRelationship.h"
#import "GCTitleAttribute.h"

@implementation GCMultimediaEmbeddedAttribute {
	GCMultimediaFormatAttribute *_multimediaFormat;
	GCTitleAttribute *_title;
	GCFileAttribute *_file;
	NSMutableArray *_noteReferences;
	NSMutableArray *_noteEmbeddeds;
}

+ (GCTag *)gedTag
{
	return [GCTag tagWithClassName:@"GCMultimediaEmbeddedAttribute"];
}

// Methods:
/** Initializes and returns a multimediaEmbedded.

 
 @return A new multimediaEmbedded.
*/
+(GCMultimediaEmbeddedAttribute *)multimediaEmbedded
{
	return [[self alloc] init];
}
/** Initializes and returns a multimediaEmbedded.

 @param value The value as a GCValue object.
 @return A new multimediaEmbedded.
*/
+(GCMultimediaEmbeddedAttribute *)multimediaEmbeddedWithValue:(GCValue *)value
{
	return [[self alloc] initWithValue:value];
}
/** Initializes and returns a multimediaEmbedded.

 @param value The value as an NSString.
 @return A new multimediaEmbedded.
*/
+(GCMultimediaEmbeddedAttribute *)multimediaEmbeddedWithGedcomStringValue:(NSString *)value
{
	return [[self alloc] initWithGedcomStringValue:value];
}
- (id)init
{
	self = [super _initWithType:@"multimediaEmbedded"];
	
	if (self) {
		// initialize ivars, if any:
		_noteReferences = [NSMutableArray array];
		_noteEmbeddeds = [NSMutableArray array];
	}
	
	return self;
}


// Properties:
@dynamic multimediaFormat;
@dynamic title;
@dynamic file;
@dynamic notes;
@dynamic noteReferences;
@dynamic mutableNoteReferences;
@dynamic noteEmbeddeds;
@dynamic mutableNoteEmbeddeds;

@end

