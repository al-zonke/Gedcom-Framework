/*
 This file was autogenerated by tags.py 
 */

#import "GCIndividualEntity.h"

#import "GCObject_internal.h"
#import "GCContext_internal.h"
#import "GCProperty_internal.h"

#import "GCAdoptionAttribute.h"
#import "GCAdultChristeningAttribute.h"
#import "GCAliasRelationship.h"
#import "GCAncestorInterestRelationship.h"
#import "GCAncestralFileNumberAttribute.h"
#import "GCAssociationRelationship.h"
#import "GCBaptismAttribute.h"
#import "GCBarMitzvahAttribute.h"
#import "GCBasMitzvahAttribute.h"
#import "GCBirthAttribute.h"
#import "GCBlessingAttribute.h"
#import "GCBurialAttribute.h"
#import "GCCasteAttribute.h"
#import "GCCensusAttribute.h"
#import "GCChangeInfoAttribute.h"
#import "GCChildInFamilyRelationship.h"
#import "GCChristeningAttribute.h"
#import "GCConfirmationAttribute.h"
#import "GCCremationAttribute.h"
#import "GCDeathAttribute.h"
#import "GCDescendantInterestRelationship.h"
#import "GCEducationAttribute.h"
#import "GCEmigrationAttribute.h"
#import "GCFirstCommunionAttribute.h"
#import "GCGenerationsOfDescendantsAttribute.h"
#import "GCGenericEventAttribute.h"
#import "GCGraduationAttribute.h"
#import "GCIdentNumberAttribute.h"
#import "GCImmigrationAttribute.h"
#import "GCLDSBaptismAttribute.h"
#import "GCLDSConfirmationAttribute.h"
#import "GCLDSEndowmentAttribute.h"
#import "GCLDSSealingChildAttribute.h"
#import "GCMultimediaEmbeddedAttribute.h"
#import "GCMultimediaReferenceRelationship.h"
#import "GCNationalityAttribute.h"
#import "GCNaturalizationAttribute.h"
#import "GCNoteEmbeddedAttribute.h"
#import "GCNoteReferenceRelationship.h"
#import "GCNumberOfChildrenAttribute.h"
#import "GCNumberOfMarriagesAttribute.h"
#import "GCOccupationAttribute.h"
#import "GCOrdinationAttribute.h"
#import "GCPersonalNameAttribute.h"
#import "GCPhysicalDescriptionAttribute.h"
#import "GCProbateAttribute.h"
#import "GCPropertyOwnedAttribute.h"
#import "GCRecordFileNumberAttribute.h"
#import "GCRecordIdNumberAttribute.h"
#import "GCReligionAttribute.h"
#import "GCResidenceAttribute.h"
#import "GCRestrictionNoticeAttribute.h"
#import "GCRetirementAttribute.h"
#import "GCSexAttribute.h"
#import "GCSocialSecurityNumberAttribute.h"
#import "GCSourceCitationRelationship.h"
#import "GCSourceEmbeddedAttribute.h"
#import "GCSpouseInFamilyRelationship.h"
#import "GCSubmitterReferenceRelationship.h"
#import "GCTitleAttribute.h"
#import "GCUserReferenceNumberAttribute.h"
#import "GCWillAttribute.h"

@implementation GCIndividualEntity {
	GCRestrictionNoticeAttribute *_restrictionNotice;
	NSMutableArray *_personalNames;
	GCSexAttribute *_sex;
	NSMutableArray *_births;
	NSMutableArray *_christenings;
	NSMutableArray *_deaths;
	NSMutableArray *_burials;
	NSMutableArray *_cremations;
	NSMutableArray *_adoptions;
	NSMutableArray *_baptisms;
	NSMutableArray *_barMitzvahs;
	NSMutableArray *_basMitzvahs;
	NSMutableArray *_blessings;
	NSMutableArray *_adultChristenings;
	NSMutableArray *_confirmations;
	NSMutableArray *_firstCommunions;
	NSMutableArray *_ordinations;
	NSMutableArray *_naturalizations;
	NSMutableArray *_emigrations;
	NSMutableArray *_immigrations;
	NSMutableArray *_censuses;
	NSMutableArray *_probates;
	NSMutableArray *_wills;
	NSMutableArray *_graduations;
	NSMutableArray *_retirements;
	NSMutableArray *_genericEvents;
	NSMutableArray *_castes;
	NSMutableArray *_physicalDescriptions;
	NSMutableArray *_generationsOfDescendantss;
	NSMutableArray *_educations;
	NSMutableArray *_identNumbers;
	NSMutableArray *_nationalities;
	NSMutableArray *_numberOfChildrens;
	NSMutableArray *_numberOfMarriagess;
	NSMutableArray *_occupations;
	NSMutableArray *_propertyOwneds;
	NSMutableArray *_religions;
	NSMutableArray *_residences;
	NSMutableArray *_socialSecurityNumbers;
	NSMutableArray *_titles;
	NSMutableArray *_lDSBaptisms;
	NSMutableArray *_lDSConfirmations;
	NSMutableArray *_lDSEndowments;
	NSMutableArray *_lDSSealingChilds;
	NSMutableArray *_childInFamilies;
	NSMutableArray *_spouseInFamilies;
	NSMutableArray *_submitterReferences;
	NSMutableArray *_associations;
	NSMutableArray *_aliases;
	NSMutableArray *_ancestorInterests;
	NSMutableArray *_descendantInterests;
	NSMutableArray *_sourceCitations;
	NSMutableArray *_sourceEmbeddeds;
	NSMutableArray *_multimediaReferences;
	NSMutableArray *_multimediaEmbeddeds;
	NSMutableArray *_noteReferences;
	NSMutableArray *_noteEmbeddeds;
	NSMutableArray *_recordFileNumbers;
	NSMutableArray *_ancestralFileNumbers;
	NSMutableArray *_userReferenceNumbers;
	GCRecordIdNumberAttribute *_recordIdNumber;
	GCChangeInfoAttribute *_changeInfo;
}

// Methods:
/** Initializes and returns a individual.

 @param context The context in which to create the entity.
 @return A new individual.
*/
+(GCIndividualEntity *)individualInContext:(GCContext *)context
{
	return [[self alloc] initInContext:context];
}
- (id)initInContext:(GCContext *)context
{
	self = [super _initWithType:@"individual" inContext:context];
	
	if (self) {
		// initialize ivars, if any:
		_personalNames = [NSMutableArray array];
		_births = [NSMutableArray array];
		_christenings = [NSMutableArray array];
		_deaths = [NSMutableArray array];
		_burials = [NSMutableArray array];
		_cremations = [NSMutableArray array];
		_adoptions = [NSMutableArray array];
		_baptisms = [NSMutableArray array];
		_barMitzvahs = [NSMutableArray array];
		_basMitzvahs = [NSMutableArray array];
		_blessings = [NSMutableArray array];
		_adultChristenings = [NSMutableArray array];
		_confirmations = [NSMutableArray array];
		_firstCommunions = [NSMutableArray array];
		_ordinations = [NSMutableArray array];
		_naturalizations = [NSMutableArray array];
		_emigrations = [NSMutableArray array];
		_immigrations = [NSMutableArray array];
		_censuses = [NSMutableArray array];
		_probates = [NSMutableArray array];
		_wills = [NSMutableArray array];
		_graduations = [NSMutableArray array];
		_retirements = [NSMutableArray array];
		_genericEvents = [NSMutableArray array];
		_castes = [NSMutableArray array];
		_physicalDescriptions = [NSMutableArray array];
		_generationsOfDescendantss = [NSMutableArray array];
		_educations = [NSMutableArray array];
		_identNumbers = [NSMutableArray array];
		_nationalities = [NSMutableArray array];
		_numberOfChildrens = [NSMutableArray array];
		_numberOfMarriagess = [NSMutableArray array];
		_occupations = [NSMutableArray array];
		_propertyOwneds = [NSMutableArray array];
		_religions = [NSMutableArray array];
		_residences = [NSMutableArray array];
		_socialSecurityNumbers = [NSMutableArray array];
		_titles = [NSMutableArray array];
		_lDSBaptisms = [NSMutableArray array];
		_lDSConfirmations = [NSMutableArray array];
		_lDSEndowments = [NSMutableArray array];
		_lDSSealingChilds = [NSMutableArray array];
		_childInFamilies = [NSMutableArray array];
		_spouseInFamilies = [NSMutableArray array];
		_submitterReferences = [NSMutableArray array];
		_associations = [NSMutableArray array];
		_aliases = [NSMutableArray array];
		_ancestorInterests = [NSMutableArray array];
		_descendantInterests = [NSMutableArray array];
		_sourceCitations = [NSMutableArray array];
		_sourceEmbeddeds = [NSMutableArray array];
		_multimediaReferences = [NSMutableArray array];
		_multimediaEmbeddeds = [NSMutableArray array];
		_noteReferences = [NSMutableArray array];
		_noteEmbeddeds = [NSMutableArray array];
		_recordFileNumbers = [NSMutableArray array];
		_ancestralFileNumbers = [NSMutableArray array];
		_userReferenceNumbers = [NSMutableArray array];
	}
	
	return self;
}


// Properties:

- (void)setRestrictionNotice:(GCProperty *)obj
{
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] setRestrictionNotice:_restrictionNotice];
	[self.context.undoManager setActionName:@"Undo restrictionNotice"]; //TODO
	
	if (_restrictionNotice) {
		obj.describedObject = nil;
	}
	
	if (obj.describedObject) {
		[obj.describedObject.mutableProperties removeObject:obj];
	}
	
	obj.describedObject = self;
	
	_restrictionNotice = (id)obj;
}

- (GCRestrictionNoticeAttribute *)restrictionNotice
{
	return _restrictionNotice;
}


- (NSMutableArray *)mutablePersonalNames {
    return [self mutableArrayValueForKey:@"personalNames"];
}

- (NSUInteger)countOfPersonalNames {
	return [_personalNames count];
}

- (id)objectInPersonalNamesAtIndex:(NSUInteger)index {
    return [_personalNames objectAtIndex:index];
}
 
- (void)insertObject:(GCProperty *)obj inPersonalNamesAtIndex:(NSUInteger)index {
	NSParameterAssert([obj isKindOfClass:[GCPersonalNameAttribute class]]);
	
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] removeObjectFromPersonalNamesAtIndex:index];
	[self.context.undoManager setActionName:@"Undo personalNames"]; //TODO
	
	if (obj.describedObject == self) {
		return;
	}
	if (obj.describedObject) {
		[obj.describedObject.mutableProperties removeObject:obj];
	}
	obj.describedObject = self;
    [_personalNames insertObject:obj atIndex:index];
}

- (void)removeObjectFromPersonalNamesAtIndex:(NSUInteger)index {
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] insertObject:_personalNames[index] inPersonalNamesAtIndex:index];
	[self.context.undoManager setActionName:@"Undo personalNames"]; //TODO
	
	((GCProperty *)_personalNames[index]).describedObject = nil;
	
    [_personalNames removeObjectAtIndex:index];
}
	

- (void)setSex:(GCProperty *)obj
{
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] setSex:_sex];
	[self.context.undoManager setActionName:@"Undo sex"]; //TODO
	
	if (_sex) {
		obj.describedObject = nil;
	}
	
	if (obj.describedObject) {
		[obj.describedObject.mutableProperties removeObject:obj];
	}
	
	obj.describedObject = self;
	
	_sex = (id)obj;
}

- (GCSexAttribute *)sex
{
	return _sex;
}

@dynamic individualEvents;

- (NSMutableArray *)mutableBirths {
    return [self mutableArrayValueForKey:@"births"];
}

- (NSUInteger)countOfBirths {
	return [_births count];
}

- (id)objectInBirthsAtIndex:(NSUInteger)index {
    return [_births objectAtIndex:index];
}
 
- (void)insertObject:(GCProperty *)obj inBirthsAtIndex:(NSUInteger)index {
	NSParameterAssert([obj isKindOfClass:[GCBirthAttribute class]]);
	
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] removeObjectFromBirthsAtIndex:index];
	[self.context.undoManager setActionName:@"Undo births"]; //TODO
	
	if (obj.describedObject == self) {
		return;
	}
	if (obj.describedObject) {
		[obj.describedObject.mutableProperties removeObject:obj];
	}
	obj.describedObject = self;
    [_births insertObject:obj atIndex:index];
}

- (void)removeObjectFromBirthsAtIndex:(NSUInteger)index {
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] insertObject:_births[index] inBirthsAtIndex:index];
	[self.context.undoManager setActionName:@"Undo births"]; //TODO
	
	((GCProperty *)_births[index]).describedObject = nil;
	
    [_births removeObjectAtIndex:index];
}
	

- (NSMutableArray *)mutableChristenings {
    return [self mutableArrayValueForKey:@"christenings"];
}

- (NSUInteger)countOfChristenings {
	return [_christenings count];
}

- (id)objectInChristeningsAtIndex:(NSUInteger)index {
    return [_christenings objectAtIndex:index];
}
 
- (void)insertObject:(GCProperty *)obj inChristeningsAtIndex:(NSUInteger)index {
	NSParameterAssert([obj isKindOfClass:[GCChristeningAttribute class]]);
	
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] removeObjectFromChristeningsAtIndex:index];
	[self.context.undoManager setActionName:@"Undo christenings"]; //TODO
	
	if (obj.describedObject == self) {
		return;
	}
	if (obj.describedObject) {
		[obj.describedObject.mutableProperties removeObject:obj];
	}
	obj.describedObject = self;
    [_christenings insertObject:obj atIndex:index];
}

- (void)removeObjectFromChristeningsAtIndex:(NSUInteger)index {
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] insertObject:_christenings[index] inChristeningsAtIndex:index];
	[self.context.undoManager setActionName:@"Undo christenings"]; //TODO
	
	((GCProperty *)_christenings[index]).describedObject = nil;
	
    [_christenings removeObjectAtIndex:index];
}
	

- (NSMutableArray *)mutableDeaths {
    return [self mutableArrayValueForKey:@"deaths"];
}

- (NSUInteger)countOfDeaths {
	return [_deaths count];
}

- (id)objectInDeathsAtIndex:(NSUInteger)index {
    return [_deaths objectAtIndex:index];
}
 
- (void)insertObject:(GCProperty *)obj inDeathsAtIndex:(NSUInteger)index {
	NSParameterAssert([obj isKindOfClass:[GCDeathAttribute class]]);
	
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] removeObjectFromDeathsAtIndex:index];
	[self.context.undoManager setActionName:@"Undo deaths"]; //TODO
	
	if (obj.describedObject == self) {
		return;
	}
	if (obj.describedObject) {
		[obj.describedObject.mutableProperties removeObject:obj];
	}
	obj.describedObject = self;
    [_deaths insertObject:obj atIndex:index];
}

- (void)removeObjectFromDeathsAtIndex:(NSUInteger)index {
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] insertObject:_deaths[index] inDeathsAtIndex:index];
	[self.context.undoManager setActionName:@"Undo deaths"]; //TODO
	
	((GCProperty *)_deaths[index]).describedObject = nil;
	
    [_deaths removeObjectAtIndex:index];
}
	

- (NSMutableArray *)mutableBurials {
    return [self mutableArrayValueForKey:@"burials"];
}

- (NSUInteger)countOfBurials {
	return [_burials count];
}

- (id)objectInBurialsAtIndex:(NSUInteger)index {
    return [_burials objectAtIndex:index];
}
 
- (void)insertObject:(GCProperty *)obj inBurialsAtIndex:(NSUInteger)index {
	NSParameterAssert([obj isKindOfClass:[GCBurialAttribute class]]);
	
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] removeObjectFromBurialsAtIndex:index];
	[self.context.undoManager setActionName:@"Undo burials"]; //TODO
	
	if (obj.describedObject == self) {
		return;
	}
	if (obj.describedObject) {
		[obj.describedObject.mutableProperties removeObject:obj];
	}
	obj.describedObject = self;
    [_burials insertObject:obj atIndex:index];
}

- (void)removeObjectFromBurialsAtIndex:(NSUInteger)index {
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] insertObject:_burials[index] inBurialsAtIndex:index];
	[self.context.undoManager setActionName:@"Undo burials"]; //TODO
	
	((GCProperty *)_burials[index]).describedObject = nil;
	
    [_burials removeObjectAtIndex:index];
}
	

- (NSMutableArray *)mutableCremations {
    return [self mutableArrayValueForKey:@"cremations"];
}

- (NSUInteger)countOfCremations {
	return [_cremations count];
}

- (id)objectInCremationsAtIndex:(NSUInteger)index {
    return [_cremations objectAtIndex:index];
}
 
- (void)insertObject:(GCProperty *)obj inCremationsAtIndex:(NSUInteger)index {
	NSParameterAssert([obj isKindOfClass:[GCCremationAttribute class]]);
	
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] removeObjectFromCremationsAtIndex:index];
	[self.context.undoManager setActionName:@"Undo cremations"]; //TODO
	
	if (obj.describedObject == self) {
		return;
	}
	if (obj.describedObject) {
		[obj.describedObject.mutableProperties removeObject:obj];
	}
	obj.describedObject = self;
    [_cremations insertObject:obj atIndex:index];
}

- (void)removeObjectFromCremationsAtIndex:(NSUInteger)index {
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] insertObject:_cremations[index] inCremationsAtIndex:index];
	[self.context.undoManager setActionName:@"Undo cremations"]; //TODO
	
	((GCProperty *)_cremations[index]).describedObject = nil;
	
    [_cremations removeObjectAtIndex:index];
}
	

- (NSMutableArray *)mutableAdoptions {
    return [self mutableArrayValueForKey:@"adoptions"];
}

- (NSUInteger)countOfAdoptions {
	return [_adoptions count];
}

- (id)objectInAdoptionsAtIndex:(NSUInteger)index {
    return [_adoptions objectAtIndex:index];
}
 
- (void)insertObject:(GCProperty *)obj inAdoptionsAtIndex:(NSUInteger)index {
	NSParameterAssert([obj isKindOfClass:[GCAdoptionAttribute class]]);
	
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] removeObjectFromAdoptionsAtIndex:index];
	[self.context.undoManager setActionName:@"Undo adoptions"]; //TODO
	
	if (obj.describedObject == self) {
		return;
	}
	if (obj.describedObject) {
		[obj.describedObject.mutableProperties removeObject:obj];
	}
	obj.describedObject = self;
    [_adoptions insertObject:obj atIndex:index];
}

- (void)removeObjectFromAdoptionsAtIndex:(NSUInteger)index {
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] insertObject:_adoptions[index] inAdoptionsAtIndex:index];
	[self.context.undoManager setActionName:@"Undo adoptions"]; //TODO
	
	((GCProperty *)_adoptions[index]).describedObject = nil;
	
    [_adoptions removeObjectAtIndex:index];
}
	

- (NSMutableArray *)mutableBaptisms {
    return [self mutableArrayValueForKey:@"baptisms"];
}

- (NSUInteger)countOfBaptisms {
	return [_baptisms count];
}

- (id)objectInBaptismsAtIndex:(NSUInteger)index {
    return [_baptisms objectAtIndex:index];
}
 
- (void)insertObject:(GCProperty *)obj inBaptismsAtIndex:(NSUInteger)index {
	NSParameterAssert([obj isKindOfClass:[GCBaptismAttribute class]]);
	
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] removeObjectFromBaptismsAtIndex:index];
	[self.context.undoManager setActionName:@"Undo baptisms"]; //TODO
	
	if (obj.describedObject == self) {
		return;
	}
	if (obj.describedObject) {
		[obj.describedObject.mutableProperties removeObject:obj];
	}
	obj.describedObject = self;
    [_baptisms insertObject:obj atIndex:index];
}

- (void)removeObjectFromBaptismsAtIndex:(NSUInteger)index {
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] insertObject:_baptisms[index] inBaptismsAtIndex:index];
	[self.context.undoManager setActionName:@"Undo baptisms"]; //TODO
	
	((GCProperty *)_baptisms[index]).describedObject = nil;
	
    [_baptisms removeObjectAtIndex:index];
}
	

- (NSMutableArray *)mutableBarMitzvahs {
    return [self mutableArrayValueForKey:@"barMitzvahs"];
}

- (NSUInteger)countOfBarMitzvahs {
	return [_barMitzvahs count];
}

- (id)objectInBarMitzvahsAtIndex:(NSUInteger)index {
    return [_barMitzvahs objectAtIndex:index];
}
 
- (void)insertObject:(GCProperty *)obj inBarMitzvahsAtIndex:(NSUInteger)index {
	NSParameterAssert([obj isKindOfClass:[GCBarMitzvahAttribute class]]);
	
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] removeObjectFromBarMitzvahsAtIndex:index];
	[self.context.undoManager setActionName:@"Undo barMitzvahs"]; //TODO
	
	if (obj.describedObject == self) {
		return;
	}
	if (obj.describedObject) {
		[obj.describedObject.mutableProperties removeObject:obj];
	}
	obj.describedObject = self;
    [_barMitzvahs insertObject:obj atIndex:index];
}

- (void)removeObjectFromBarMitzvahsAtIndex:(NSUInteger)index {
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] insertObject:_barMitzvahs[index] inBarMitzvahsAtIndex:index];
	[self.context.undoManager setActionName:@"Undo barMitzvahs"]; //TODO
	
	((GCProperty *)_barMitzvahs[index]).describedObject = nil;
	
    [_barMitzvahs removeObjectAtIndex:index];
}
	

- (NSMutableArray *)mutableBasMitzvahs {
    return [self mutableArrayValueForKey:@"basMitzvahs"];
}

- (NSUInteger)countOfBasMitzvahs {
	return [_basMitzvahs count];
}

- (id)objectInBasMitzvahsAtIndex:(NSUInteger)index {
    return [_basMitzvahs objectAtIndex:index];
}
 
- (void)insertObject:(GCProperty *)obj inBasMitzvahsAtIndex:(NSUInteger)index {
	NSParameterAssert([obj isKindOfClass:[GCBasMitzvahAttribute class]]);
	
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] removeObjectFromBasMitzvahsAtIndex:index];
	[self.context.undoManager setActionName:@"Undo basMitzvahs"]; //TODO
	
	if (obj.describedObject == self) {
		return;
	}
	if (obj.describedObject) {
		[obj.describedObject.mutableProperties removeObject:obj];
	}
	obj.describedObject = self;
    [_basMitzvahs insertObject:obj atIndex:index];
}

- (void)removeObjectFromBasMitzvahsAtIndex:(NSUInteger)index {
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] insertObject:_basMitzvahs[index] inBasMitzvahsAtIndex:index];
	[self.context.undoManager setActionName:@"Undo basMitzvahs"]; //TODO
	
	((GCProperty *)_basMitzvahs[index]).describedObject = nil;
	
    [_basMitzvahs removeObjectAtIndex:index];
}
	

- (NSMutableArray *)mutableBlessings {
    return [self mutableArrayValueForKey:@"blessings"];
}

- (NSUInteger)countOfBlessings {
	return [_blessings count];
}

- (id)objectInBlessingsAtIndex:(NSUInteger)index {
    return [_blessings objectAtIndex:index];
}
 
- (void)insertObject:(GCProperty *)obj inBlessingsAtIndex:(NSUInteger)index {
	NSParameterAssert([obj isKindOfClass:[GCBlessingAttribute class]]);
	
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] removeObjectFromBlessingsAtIndex:index];
	[self.context.undoManager setActionName:@"Undo blessings"]; //TODO
	
	if (obj.describedObject == self) {
		return;
	}
	if (obj.describedObject) {
		[obj.describedObject.mutableProperties removeObject:obj];
	}
	obj.describedObject = self;
    [_blessings insertObject:obj atIndex:index];
}

- (void)removeObjectFromBlessingsAtIndex:(NSUInteger)index {
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] insertObject:_blessings[index] inBlessingsAtIndex:index];
	[self.context.undoManager setActionName:@"Undo blessings"]; //TODO
	
	((GCProperty *)_blessings[index]).describedObject = nil;
	
    [_blessings removeObjectAtIndex:index];
}
	

- (NSMutableArray *)mutableAdultChristenings {
    return [self mutableArrayValueForKey:@"adultChristenings"];
}

- (NSUInteger)countOfAdultChristenings {
	return [_adultChristenings count];
}

- (id)objectInAdultChristeningsAtIndex:(NSUInteger)index {
    return [_adultChristenings objectAtIndex:index];
}
 
- (void)insertObject:(GCProperty *)obj inAdultChristeningsAtIndex:(NSUInteger)index {
	NSParameterAssert([obj isKindOfClass:[GCAdultChristeningAttribute class]]);
	
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] removeObjectFromAdultChristeningsAtIndex:index];
	[self.context.undoManager setActionName:@"Undo adultChristenings"]; //TODO
	
	if (obj.describedObject == self) {
		return;
	}
	if (obj.describedObject) {
		[obj.describedObject.mutableProperties removeObject:obj];
	}
	obj.describedObject = self;
    [_adultChristenings insertObject:obj atIndex:index];
}

- (void)removeObjectFromAdultChristeningsAtIndex:(NSUInteger)index {
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] insertObject:_adultChristenings[index] inAdultChristeningsAtIndex:index];
	[self.context.undoManager setActionName:@"Undo adultChristenings"]; //TODO
	
	((GCProperty *)_adultChristenings[index]).describedObject = nil;
	
    [_adultChristenings removeObjectAtIndex:index];
}
	

- (NSMutableArray *)mutableConfirmations {
    return [self mutableArrayValueForKey:@"confirmations"];
}

- (NSUInteger)countOfConfirmations {
	return [_confirmations count];
}

- (id)objectInConfirmationsAtIndex:(NSUInteger)index {
    return [_confirmations objectAtIndex:index];
}
 
- (void)insertObject:(GCProperty *)obj inConfirmationsAtIndex:(NSUInteger)index {
	NSParameterAssert([obj isKindOfClass:[GCConfirmationAttribute class]]);
	
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] removeObjectFromConfirmationsAtIndex:index];
	[self.context.undoManager setActionName:@"Undo confirmations"]; //TODO
	
	if (obj.describedObject == self) {
		return;
	}
	if (obj.describedObject) {
		[obj.describedObject.mutableProperties removeObject:obj];
	}
	obj.describedObject = self;
    [_confirmations insertObject:obj atIndex:index];
}

- (void)removeObjectFromConfirmationsAtIndex:(NSUInteger)index {
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] insertObject:_confirmations[index] inConfirmationsAtIndex:index];
	[self.context.undoManager setActionName:@"Undo confirmations"]; //TODO
	
	((GCProperty *)_confirmations[index]).describedObject = nil;
	
    [_confirmations removeObjectAtIndex:index];
}
	

- (NSMutableArray *)mutableFirstCommunions {
    return [self mutableArrayValueForKey:@"firstCommunions"];
}

- (NSUInteger)countOfFirstCommunions {
	return [_firstCommunions count];
}

- (id)objectInFirstCommunionsAtIndex:(NSUInteger)index {
    return [_firstCommunions objectAtIndex:index];
}
 
- (void)insertObject:(GCProperty *)obj inFirstCommunionsAtIndex:(NSUInteger)index {
	NSParameterAssert([obj isKindOfClass:[GCFirstCommunionAttribute class]]);
	
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] removeObjectFromFirstCommunionsAtIndex:index];
	[self.context.undoManager setActionName:@"Undo firstCommunions"]; //TODO
	
	if (obj.describedObject == self) {
		return;
	}
	if (obj.describedObject) {
		[obj.describedObject.mutableProperties removeObject:obj];
	}
	obj.describedObject = self;
    [_firstCommunions insertObject:obj atIndex:index];
}

- (void)removeObjectFromFirstCommunionsAtIndex:(NSUInteger)index {
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] insertObject:_firstCommunions[index] inFirstCommunionsAtIndex:index];
	[self.context.undoManager setActionName:@"Undo firstCommunions"]; //TODO
	
	((GCProperty *)_firstCommunions[index]).describedObject = nil;
	
    [_firstCommunions removeObjectAtIndex:index];
}
	

- (NSMutableArray *)mutableOrdinations {
    return [self mutableArrayValueForKey:@"ordinations"];
}

- (NSUInteger)countOfOrdinations {
	return [_ordinations count];
}

- (id)objectInOrdinationsAtIndex:(NSUInteger)index {
    return [_ordinations objectAtIndex:index];
}
 
- (void)insertObject:(GCProperty *)obj inOrdinationsAtIndex:(NSUInteger)index {
	NSParameterAssert([obj isKindOfClass:[GCOrdinationAttribute class]]);
	
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] removeObjectFromOrdinationsAtIndex:index];
	[self.context.undoManager setActionName:@"Undo ordinations"]; //TODO
	
	if (obj.describedObject == self) {
		return;
	}
	if (obj.describedObject) {
		[obj.describedObject.mutableProperties removeObject:obj];
	}
	obj.describedObject = self;
    [_ordinations insertObject:obj atIndex:index];
}

- (void)removeObjectFromOrdinationsAtIndex:(NSUInteger)index {
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] insertObject:_ordinations[index] inOrdinationsAtIndex:index];
	[self.context.undoManager setActionName:@"Undo ordinations"]; //TODO
	
	((GCProperty *)_ordinations[index]).describedObject = nil;
	
    [_ordinations removeObjectAtIndex:index];
}
	

- (NSMutableArray *)mutableNaturalizations {
    return [self mutableArrayValueForKey:@"naturalizations"];
}

- (NSUInteger)countOfNaturalizations {
	return [_naturalizations count];
}

- (id)objectInNaturalizationsAtIndex:(NSUInteger)index {
    return [_naturalizations objectAtIndex:index];
}
 
- (void)insertObject:(GCProperty *)obj inNaturalizationsAtIndex:(NSUInteger)index {
	NSParameterAssert([obj isKindOfClass:[GCNaturalizationAttribute class]]);
	
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] removeObjectFromNaturalizationsAtIndex:index];
	[self.context.undoManager setActionName:@"Undo naturalizations"]; //TODO
	
	if (obj.describedObject == self) {
		return;
	}
	if (obj.describedObject) {
		[obj.describedObject.mutableProperties removeObject:obj];
	}
	obj.describedObject = self;
    [_naturalizations insertObject:obj atIndex:index];
}

- (void)removeObjectFromNaturalizationsAtIndex:(NSUInteger)index {
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] insertObject:_naturalizations[index] inNaturalizationsAtIndex:index];
	[self.context.undoManager setActionName:@"Undo naturalizations"]; //TODO
	
	((GCProperty *)_naturalizations[index]).describedObject = nil;
	
    [_naturalizations removeObjectAtIndex:index];
}
	

- (NSMutableArray *)mutableEmigrations {
    return [self mutableArrayValueForKey:@"emigrations"];
}

- (NSUInteger)countOfEmigrations {
	return [_emigrations count];
}

- (id)objectInEmigrationsAtIndex:(NSUInteger)index {
    return [_emigrations objectAtIndex:index];
}
 
- (void)insertObject:(GCProperty *)obj inEmigrationsAtIndex:(NSUInteger)index {
	NSParameterAssert([obj isKindOfClass:[GCEmigrationAttribute class]]);
	
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] removeObjectFromEmigrationsAtIndex:index];
	[self.context.undoManager setActionName:@"Undo emigrations"]; //TODO
	
	if (obj.describedObject == self) {
		return;
	}
	if (obj.describedObject) {
		[obj.describedObject.mutableProperties removeObject:obj];
	}
	obj.describedObject = self;
    [_emigrations insertObject:obj atIndex:index];
}

- (void)removeObjectFromEmigrationsAtIndex:(NSUInteger)index {
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] insertObject:_emigrations[index] inEmigrationsAtIndex:index];
	[self.context.undoManager setActionName:@"Undo emigrations"]; //TODO
	
	((GCProperty *)_emigrations[index]).describedObject = nil;
	
    [_emigrations removeObjectAtIndex:index];
}
	

- (NSMutableArray *)mutableImmigrations {
    return [self mutableArrayValueForKey:@"immigrations"];
}

- (NSUInteger)countOfImmigrations {
	return [_immigrations count];
}

- (id)objectInImmigrationsAtIndex:(NSUInteger)index {
    return [_immigrations objectAtIndex:index];
}
 
- (void)insertObject:(GCProperty *)obj inImmigrationsAtIndex:(NSUInteger)index {
	NSParameterAssert([obj isKindOfClass:[GCImmigrationAttribute class]]);
	
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] removeObjectFromImmigrationsAtIndex:index];
	[self.context.undoManager setActionName:@"Undo immigrations"]; //TODO
	
	if (obj.describedObject == self) {
		return;
	}
	if (obj.describedObject) {
		[obj.describedObject.mutableProperties removeObject:obj];
	}
	obj.describedObject = self;
    [_immigrations insertObject:obj atIndex:index];
}

- (void)removeObjectFromImmigrationsAtIndex:(NSUInteger)index {
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] insertObject:_immigrations[index] inImmigrationsAtIndex:index];
	[self.context.undoManager setActionName:@"Undo immigrations"]; //TODO
	
	((GCProperty *)_immigrations[index]).describedObject = nil;
	
    [_immigrations removeObjectAtIndex:index];
}
	

- (NSMutableArray *)mutableCensuses {
    return [self mutableArrayValueForKey:@"censuses"];
}

- (NSUInteger)countOfCensuses {
	return [_censuses count];
}

- (id)objectInCensusesAtIndex:(NSUInteger)index {
    return [_censuses objectAtIndex:index];
}
 
- (void)insertObject:(GCProperty *)obj inCensusesAtIndex:(NSUInteger)index {
	NSParameterAssert([obj isKindOfClass:[GCCensusAttribute class]]);
	
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] removeObjectFromCensusesAtIndex:index];
	[self.context.undoManager setActionName:@"Undo censuses"]; //TODO
	
	if (obj.describedObject == self) {
		return;
	}
	if (obj.describedObject) {
		[obj.describedObject.mutableProperties removeObject:obj];
	}
	obj.describedObject = self;
    [_censuses insertObject:obj atIndex:index];
}

- (void)removeObjectFromCensusesAtIndex:(NSUInteger)index {
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] insertObject:_censuses[index] inCensusesAtIndex:index];
	[self.context.undoManager setActionName:@"Undo censuses"]; //TODO
	
	((GCProperty *)_censuses[index]).describedObject = nil;
	
    [_censuses removeObjectAtIndex:index];
}
	

- (NSMutableArray *)mutableProbates {
    return [self mutableArrayValueForKey:@"probates"];
}

- (NSUInteger)countOfProbates {
	return [_probates count];
}

- (id)objectInProbatesAtIndex:(NSUInteger)index {
    return [_probates objectAtIndex:index];
}
 
- (void)insertObject:(GCProperty *)obj inProbatesAtIndex:(NSUInteger)index {
	NSParameterAssert([obj isKindOfClass:[GCProbateAttribute class]]);
	
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] removeObjectFromProbatesAtIndex:index];
	[self.context.undoManager setActionName:@"Undo probates"]; //TODO
	
	if (obj.describedObject == self) {
		return;
	}
	if (obj.describedObject) {
		[obj.describedObject.mutableProperties removeObject:obj];
	}
	obj.describedObject = self;
    [_probates insertObject:obj atIndex:index];
}

- (void)removeObjectFromProbatesAtIndex:(NSUInteger)index {
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] insertObject:_probates[index] inProbatesAtIndex:index];
	[self.context.undoManager setActionName:@"Undo probates"]; //TODO
	
	((GCProperty *)_probates[index]).describedObject = nil;
	
    [_probates removeObjectAtIndex:index];
}
	

- (NSMutableArray *)mutableWills {
    return [self mutableArrayValueForKey:@"wills"];
}

- (NSUInteger)countOfWills {
	return [_wills count];
}

- (id)objectInWillsAtIndex:(NSUInteger)index {
    return [_wills objectAtIndex:index];
}
 
- (void)insertObject:(GCProperty *)obj inWillsAtIndex:(NSUInteger)index {
	NSParameterAssert([obj isKindOfClass:[GCWillAttribute class]]);
	
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] removeObjectFromWillsAtIndex:index];
	[self.context.undoManager setActionName:@"Undo wills"]; //TODO
	
	if (obj.describedObject == self) {
		return;
	}
	if (obj.describedObject) {
		[obj.describedObject.mutableProperties removeObject:obj];
	}
	obj.describedObject = self;
    [_wills insertObject:obj atIndex:index];
}

- (void)removeObjectFromWillsAtIndex:(NSUInteger)index {
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] insertObject:_wills[index] inWillsAtIndex:index];
	[self.context.undoManager setActionName:@"Undo wills"]; //TODO
	
	((GCProperty *)_wills[index]).describedObject = nil;
	
    [_wills removeObjectAtIndex:index];
}
	

- (NSMutableArray *)mutableGraduations {
    return [self mutableArrayValueForKey:@"graduations"];
}

- (NSUInteger)countOfGraduations {
	return [_graduations count];
}

- (id)objectInGraduationsAtIndex:(NSUInteger)index {
    return [_graduations objectAtIndex:index];
}
 
- (void)insertObject:(GCProperty *)obj inGraduationsAtIndex:(NSUInteger)index {
	NSParameterAssert([obj isKindOfClass:[GCGraduationAttribute class]]);
	
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] removeObjectFromGraduationsAtIndex:index];
	[self.context.undoManager setActionName:@"Undo graduations"]; //TODO
	
	if (obj.describedObject == self) {
		return;
	}
	if (obj.describedObject) {
		[obj.describedObject.mutableProperties removeObject:obj];
	}
	obj.describedObject = self;
    [_graduations insertObject:obj atIndex:index];
}

- (void)removeObjectFromGraduationsAtIndex:(NSUInteger)index {
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] insertObject:_graduations[index] inGraduationsAtIndex:index];
	[self.context.undoManager setActionName:@"Undo graduations"]; //TODO
	
	((GCProperty *)_graduations[index]).describedObject = nil;
	
    [_graduations removeObjectAtIndex:index];
}
	

- (NSMutableArray *)mutableRetirements {
    return [self mutableArrayValueForKey:@"retirements"];
}

- (NSUInteger)countOfRetirements {
	return [_retirements count];
}

- (id)objectInRetirementsAtIndex:(NSUInteger)index {
    return [_retirements objectAtIndex:index];
}
 
- (void)insertObject:(GCProperty *)obj inRetirementsAtIndex:(NSUInteger)index {
	NSParameterAssert([obj isKindOfClass:[GCRetirementAttribute class]]);
	
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] removeObjectFromRetirementsAtIndex:index];
	[self.context.undoManager setActionName:@"Undo retirements"]; //TODO
	
	if (obj.describedObject == self) {
		return;
	}
	if (obj.describedObject) {
		[obj.describedObject.mutableProperties removeObject:obj];
	}
	obj.describedObject = self;
    [_retirements insertObject:obj atIndex:index];
}

- (void)removeObjectFromRetirementsAtIndex:(NSUInteger)index {
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] insertObject:_retirements[index] inRetirementsAtIndex:index];
	[self.context.undoManager setActionName:@"Undo retirements"]; //TODO
	
	((GCProperty *)_retirements[index]).describedObject = nil;
	
    [_retirements removeObjectAtIndex:index];
}
	

- (NSMutableArray *)mutableGenericEvents {
    return [self mutableArrayValueForKey:@"genericEvents"];
}

- (NSUInteger)countOfGenericEvents {
	return [_genericEvents count];
}

- (id)objectInGenericEventsAtIndex:(NSUInteger)index {
    return [_genericEvents objectAtIndex:index];
}
 
- (void)insertObject:(GCProperty *)obj inGenericEventsAtIndex:(NSUInteger)index {
	NSParameterAssert([obj isKindOfClass:[GCGenericEventAttribute class]]);
	
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] removeObjectFromGenericEventsAtIndex:index];
	[self.context.undoManager setActionName:@"Undo genericEvents"]; //TODO
	
	if (obj.describedObject == self) {
		return;
	}
	if (obj.describedObject) {
		[obj.describedObject.mutableProperties removeObject:obj];
	}
	obj.describedObject = self;
    [_genericEvents insertObject:obj atIndex:index];
}

- (void)removeObjectFromGenericEventsAtIndex:(NSUInteger)index {
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] insertObject:_genericEvents[index] inGenericEventsAtIndex:index];
	[self.context.undoManager setActionName:@"Undo genericEvents"]; //TODO
	
	((GCProperty *)_genericEvents[index]).describedObject = nil;
	
    [_genericEvents removeObjectAtIndex:index];
}
	
@dynamic individualAttributes;

- (NSMutableArray *)mutableCastes {
    return [self mutableArrayValueForKey:@"castes"];
}

- (NSUInteger)countOfCastes {
	return [_castes count];
}

- (id)objectInCastesAtIndex:(NSUInteger)index {
    return [_castes objectAtIndex:index];
}
 
- (void)insertObject:(GCProperty *)obj inCastesAtIndex:(NSUInteger)index {
	NSParameterAssert([obj isKindOfClass:[GCCasteAttribute class]]);
	
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] removeObjectFromCastesAtIndex:index];
	[self.context.undoManager setActionName:@"Undo castes"]; //TODO
	
	if (obj.describedObject == self) {
		return;
	}
	if (obj.describedObject) {
		[obj.describedObject.mutableProperties removeObject:obj];
	}
	obj.describedObject = self;
    [_castes insertObject:obj atIndex:index];
}

- (void)removeObjectFromCastesAtIndex:(NSUInteger)index {
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] insertObject:_castes[index] inCastesAtIndex:index];
	[self.context.undoManager setActionName:@"Undo castes"]; //TODO
	
	((GCProperty *)_castes[index]).describedObject = nil;
	
    [_castes removeObjectAtIndex:index];
}
	

- (NSMutableArray *)mutablePhysicalDescriptions {
    return [self mutableArrayValueForKey:@"physicalDescriptions"];
}

- (NSUInteger)countOfPhysicalDescriptions {
	return [_physicalDescriptions count];
}

- (id)objectInPhysicalDescriptionsAtIndex:(NSUInteger)index {
    return [_physicalDescriptions objectAtIndex:index];
}
 
- (void)insertObject:(GCProperty *)obj inPhysicalDescriptionsAtIndex:(NSUInteger)index {
	NSParameterAssert([obj isKindOfClass:[GCPhysicalDescriptionAttribute class]]);
	
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] removeObjectFromPhysicalDescriptionsAtIndex:index];
	[self.context.undoManager setActionName:@"Undo physicalDescriptions"]; //TODO
	
	if (obj.describedObject == self) {
		return;
	}
	if (obj.describedObject) {
		[obj.describedObject.mutableProperties removeObject:obj];
	}
	obj.describedObject = self;
    [_physicalDescriptions insertObject:obj atIndex:index];
}

- (void)removeObjectFromPhysicalDescriptionsAtIndex:(NSUInteger)index {
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] insertObject:_physicalDescriptions[index] inPhysicalDescriptionsAtIndex:index];
	[self.context.undoManager setActionName:@"Undo physicalDescriptions"]; //TODO
	
	((GCProperty *)_physicalDescriptions[index]).describedObject = nil;
	
    [_physicalDescriptions removeObjectAtIndex:index];
}
	

- (NSMutableArray *)mutableGenerationsOfDescendantss {
    return [self mutableArrayValueForKey:@"generationsOfDescendantss"];
}

- (NSUInteger)countOfGenerationsOfDescendantss {
	return [_generationsOfDescendantss count];
}

- (id)objectInGenerationsOfDescendantssAtIndex:(NSUInteger)index {
    return [_generationsOfDescendantss objectAtIndex:index];
}
 
- (void)insertObject:(GCProperty *)obj inGenerationsOfDescendantssAtIndex:(NSUInteger)index {
	NSParameterAssert([obj isKindOfClass:[GCGenerationsOfDescendantsAttribute class]]);
	
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] removeObjectFromGenerationsOfDescendantssAtIndex:index];
	[self.context.undoManager setActionName:@"Undo generationsOfDescendantss"]; //TODO
	
	if (obj.describedObject == self) {
		return;
	}
	if (obj.describedObject) {
		[obj.describedObject.mutableProperties removeObject:obj];
	}
	obj.describedObject = self;
    [_generationsOfDescendantss insertObject:obj atIndex:index];
}

- (void)removeObjectFromGenerationsOfDescendantssAtIndex:(NSUInteger)index {
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] insertObject:_generationsOfDescendantss[index] inGenerationsOfDescendantssAtIndex:index];
	[self.context.undoManager setActionName:@"Undo generationsOfDescendantss"]; //TODO
	
	((GCProperty *)_generationsOfDescendantss[index]).describedObject = nil;
	
    [_generationsOfDescendantss removeObjectAtIndex:index];
}
	

- (NSMutableArray *)mutableEducations {
    return [self mutableArrayValueForKey:@"educations"];
}

- (NSUInteger)countOfEducations {
	return [_educations count];
}

- (id)objectInEducationsAtIndex:(NSUInteger)index {
    return [_educations objectAtIndex:index];
}
 
- (void)insertObject:(GCProperty *)obj inEducationsAtIndex:(NSUInteger)index {
	NSParameterAssert([obj isKindOfClass:[GCEducationAttribute class]]);
	
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] removeObjectFromEducationsAtIndex:index];
	[self.context.undoManager setActionName:@"Undo educations"]; //TODO
	
	if (obj.describedObject == self) {
		return;
	}
	if (obj.describedObject) {
		[obj.describedObject.mutableProperties removeObject:obj];
	}
	obj.describedObject = self;
    [_educations insertObject:obj atIndex:index];
}

- (void)removeObjectFromEducationsAtIndex:(NSUInteger)index {
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] insertObject:_educations[index] inEducationsAtIndex:index];
	[self.context.undoManager setActionName:@"Undo educations"]; //TODO
	
	((GCProperty *)_educations[index]).describedObject = nil;
	
    [_educations removeObjectAtIndex:index];
}
	

- (NSMutableArray *)mutableIdentNumbers {
    return [self mutableArrayValueForKey:@"identNumbers"];
}

- (NSUInteger)countOfIdentNumbers {
	return [_identNumbers count];
}

- (id)objectInIdentNumbersAtIndex:(NSUInteger)index {
    return [_identNumbers objectAtIndex:index];
}
 
- (void)insertObject:(GCProperty *)obj inIdentNumbersAtIndex:(NSUInteger)index {
	NSParameterAssert([obj isKindOfClass:[GCIdentNumberAttribute class]]);
	
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] removeObjectFromIdentNumbersAtIndex:index];
	[self.context.undoManager setActionName:@"Undo identNumbers"]; //TODO
	
	if (obj.describedObject == self) {
		return;
	}
	if (obj.describedObject) {
		[obj.describedObject.mutableProperties removeObject:obj];
	}
	obj.describedObject = self;
    [_identNumbers insertObject:obj atIndex:index];
}

- (void)removeObjectFromIdentNumbersAtIndex:(NSUInteger)index {
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] insertObject:_identNumbers[index] inIdentNumbersAtIndex:index];
	[self.context.undoManager setActionName:@"Undo identNumbers"]; //TODO
	
	((GCProperty *)_identNumbers[index]).describedObject = nil;
	
    [_identNumbers removeObjectAtIndex:index];
}
	

- (NSMutableArray *)mutableNationalities {
    return [self mutableArrayValueForKey:@"nationalities"];
}

- (NSUInteger)countOfNationalities {
	return [_nationalities count];
}

- (id)objectInNationalitiesAtIndex:(NSUInteger)index {
    return [_nationalities objectAtIndex:index];
}
 
- (void)insertObject:(GCProperty *)obj inNationalitiesAtIndex:(NSUInteger)index {
	NSParameterAssert([obj isKindOfClass:[GCNationalityAttribute class]]);
	
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] removeObjectFromNationalitiesAtIndex:index];
	[self.context.undoManager setActionName:@"Undo nationalities"]; //TODO
	
	if (obj.describedObject == self) {
		return;
	}
	if (obj.describedObject) {
		[obj.describedObject.mutableProperties removeObject:obj];
	}
	obj.describedObject = self;
    [_nationalities insertObject:obj atIndex:index];
}

- (void)removeObjectFromNationalitiesAtIndex:(NSUInteger)index {
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] insertObject:_nationalities[index] inNationalitiesAtIndex:index];
	[self.context.undoManager setActionName:@"Undo nationalities"]; //TODO
	
	((GCProperty *)_nationalities[index]).describedObject = nil;
	
    [_nationalities removeObjectAtIndex:index];
}
	

- (NSMutableArray *)mutableNumberOfChildrens {
    return [self mutableArrayValueForKey:@"numberOfChildrens"];
}

- (NSUInteger)countOfNumberOfChildrens {
	return [_numberOfChildrens count];
}

- (id)objectInNumberOfChildrensAtIndex:(NSUInteger)index {
    return [_numberOfChildrens objectAtIndex:index];
}
 
- (void)insertObject:(GCProperty *)obj inNumberOfChildrensAtIndex:(NSUInteger)index {
	NSParameterAssert([obj isKindOfClass:[GCNumberOfChildrenAttribute class]]);
	
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] removeObjectFromNumberOfChildrensAtIndex:index];
	[self.context.undoManager setActionName:@"Undo numberOfChildrens"]; //TODO
	
	if (obj.describedObject == self) {
		return;
	}
	if (obj.describedObject) {
		[obj.describedObject.mutableProperties removeObject:obj];
	}
	obj.describedObject = self;
    [_numberOfChildrens insertObject:obj atIndex:index];
}

- (void)removeObjectFromNumberOfChildrensAtIndex:(NSUInteger)index {
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] insertObject:_numberOfChildrens[index] inNumberOfChildrensAtIndex:index];
	[self.context.undoManager setActionName:@"Undo numberOfChildrens"]; //TODO
	
	((GCProperty *)_numberOfChildrens[index]).describedObject = nil;
	
    [_numberOfChildrens removeObjectAtIndex:index];
}
	

- (NSMutableArray *)mutableNumberOfMarriagess {
    return [self mutableArrayValueForKey:@"numberOfMarriagess"];
}

- (NSUInteger)countOfNumberOfMarriagess {
	return [_numberOfMarriagess count];
}

- (id)objectInNumberOfMarriagessAtIndex:(NSUInteger)index {
    return [_numberOfMarriagess objectAtIndex:index];
}
 
- (void)insertObject:(GCProperty *)obj inNumberOfMarriagessAtIndex:(NSUInteger)index {
	NSParameterAssert([obj isKindOfClass:[GCNumberOfMarriagesAttribute class]]);
	
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] removeObjectFromNumberOfMarriagessAtIndex:index];
	[self.context.undoManager setActionName:@"Undo numberOfMarriagess"]; //TODO
	
	if (obj.describedObject == self) {
		return;
	}
	if (obj.describedObject) {
		[obj.describedObject.mutableProperties removeObject:obj];
	}
	obj.describedObject = self;
    [_numberOfMarriagess insertObject:obj atIndex:index];
}

- (void)removeObjectFromNumberOfMarriagessAtIndex:(NSUInteger)index {
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] insertObject:_numberOfMarriagess[index] inNumberOfMarriagessAtIndex:index];
	[self.context.undoManager setActionName:@"Undo numberOfMarriagess"]; //TODO
	
	((GCProperty *)_numberOfMarriagess[index]).describedObject = nil;
	
    [_numberOfMarriagess removeObjectAtIndex:index];
}
	

- (NSMutableArray *)mutableOccupations {
    return [self mutableArrayValueForKey:@"occupations"];
}

- (NSUInteger)countOfOccupations {
	return [_occupations count];
}

- (id)objectInOccupationsAtIndex:(NSUInteger)index {
    return [_occupations objectAtIndex:index];
}
 
- (void)insertObject:(GCProperty *)obj inOccupationsAtIndex:(NSUInteger)index {
	NSParameterAssert([obj isKindOfClass:[GCOccupationAttribute class]]);
	
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] removeObjectFromOccupationsAtIndex:index];
	[self.context.undoManager setActionName:@"Undo occupations"]; //TODO
	
	if (obj.describedObject == self) {
		return;
	}
	if (obj.describedObject) {
		[obj.describedObject.mutableProperties removeObject:obj];
	}
	obj.describedObject = self;
    [_occupations insertObject:obj atIndex:index];
}

- (void)removeObjectFromOccupationsAtIndex:(NSUInteger)index {
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] insertObject:_occupations[index] inOccupationsAtIndex:index];
	[self.context.undoManager setActionName:@"Undo occupations"]; //TODO
	
	((GCProperty *)_occupations[index]).describedObject = nil;
	
    [_occupations removeObjectAtIndex:index];
}
	

- (NSMutableArray *)mutablePropertyOwneds {
    return [self mutableArrayValueForKey:@"propertyOwneds"];
}

- (NSUInteger)countOfPropertyOwneds {
	return [_propertyOwneds count];
}

- (id)objectInPropertyOwnedsAtIndex:(NSUInteger)index {
    return [_propertyOwneds objectAtIndex:index];
}
 
- (void)insertObject:(GCProperty *)obj inPropertyOwnedsAtIndex:(NSUInteger)index {
	NSParameterAssert([obj isKindOfClass:[GCPropertyOwnedAttribute class]]);
	
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] removeObjectFromPropertyOwnedsAtIndex:index];
	[self.context.undoManager setActionName:@"Undo propertyOwneds"]; //TODO
	
	if (obj.describedObject == self) {
		return;
	}
	if (obj.describedObject) {
		[obj.describedObject.mutableProperties removeObject:obj];
	}
	obj.describedObject = self;
    [_propertyOwneds insertObject:obj atIndex:index];
}

- (void)removeObjectFromPropertyOwnedsAtIndex:(NSUInteger)index {
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] insertObject:_propertyOwneds[index] inPropertyOwnedsAtIndex:index];
	[self.context.undoManager setActionName:@"Undo propertyOwneds"]; //TODO
	
	((GCProperty *)_propertyOwneds[index]).describedObject = nil;
	
    [_propertyOwneds removeObjectAtIndex:index];
}
	

- (NSMutableArray *)mutableReligions {
    return [self mutableArrayValueForKey:@"religions"];
}

- (NSUInteger)countOfReligions {
	return [_religions count];
}

- (id)objectInReligionsAtIndex:(NSUInteger)index {
    return [_religions objectAtIndex:index];
}
 
- (void)insertObject:(GCProperty *)obj inReligionsAtIndex:(NSUInteger)index {
	NSParameterAssert([obj isKindOfClass:[GCReligionAttribute class]]);
	
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] removeObjectFromReligionsAtIndex:index];
	[self.context.undoManager setActionName:@"Undo religions"]; //TODO
	
	if (obj.describedObject == self) {
		return;
	}
	if (obj.describedObject) {
		[obj.describedObject.mutableProperties removeObject:obj];
	}
	obj.describedObject = self;
    [_religions insertObject:obj atIndex:index];
}

- (void)removeObjectFromReligionsAtIndex:(NSUInteger)index {
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] insertObject:_religions[index] inReligionsAtIndex:index];
	[self.context.undoManager setActionName:@"Undo religions"]; //TODO
	
	((GCProperty *)_religions[index]).describedObject = nil;
	
    [_religions removeObjectAtIndex:index];
}
	

- (NSMutableArray *)mutableResidences {
    return [self mutableArrayValueForKey:@"residences"];
}

- (NSUInteger)countOfResidences {
	return [_residences count];
}

- (id)objectInResidencesAtIndex:(NSUInteger)index {
    return [_residences objectAtIndex:index];
}
 
- (void)insertObject:(GCProperty *)obj inResidencesAtIndex:(NSUInteger)index {
	NSParameterAssert([obj isKindOfClass:[GCResidenceAttribute class]]);
	
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] removeObjectFromResidencesAtIndex:index];
	[self.context.undoManager setActionName:@"Undo residences"]; //TODO
	
	if (obj.describedObject == self) {
		return;
	}
	if (obj.describedObject) {
		[obj.describedObject.mutableProperties removeObject:obj];
	}
	obj.describedObject = self;
    [_residences insertObject:obj atIndex:index];
}

- (void)removeObjectFromResidencesAtIndex:(NSUInteger)index {
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] insertObject:_residences[index] inResidencesAtIndex:index];
	[self.context.undoManager setActionName:@"Undo residences"]; //TODO
	
	((GCProperty *)_residences[index]).describedObject = nil;
	
    [_residences removeObjectAtIndex:index];
}
	

- (NSMutableArray *)mutableSocialSecurityNumbers {
    return [self mutableArrayValueForKey:@"socialSecurityNumbers"];
}

- (NSUInteger)countOfSocialSecurityNumbers {
	return [_socialSecurityNumbers count];
}

- (id)objectInSocialSecurityNumbersAtIndex:(NSUInteger)index {
    return [_socialSecurityNumbers objectAtIndex:index];
}
 
- (void)insertObject:(GCProperty *)obj inSocialSecurityNumbersAtIndex:(NSUInteger)index {
	NSParameterAssert([obj isKindOfClass:[GCSocialSecurityNumberAttribute class]]);
	
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] removeObjectFromSocialSecurityNumbersAtIndex:index];
	[self.context.undoManager setActionName:@"Undo socialSecurityNumbers"]; //TODO
	
	if (obj.describedObject == self) {
		return;
	}
	if (obj.describedObject) {
		[obj.describedObject.mutableProperties removeObject:obj];
	}
	obj.describedObject = self;
    [_socialSecurityNumbers insertObject:obj atIndex:index];
}

- (void)removeObjectFromSocialSecurityNumbersAtIndex:(NSUInteger)index {
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] insertObject:_socialSecurityNumbers[index] inSocialSecurityNumbersAtIndex:index];
	[self.context.undoManager setActionName:@"Undo socialSecurityNumbers"]; //TODO
	
	((GCProperty *)_socialSecurityNumbers[index]).describedObject = nil;
	
    [_socialSecurityNumbers removeObjectAtIndex:index];
}
	

- (NSMutableArray *)mutableTitles {
    return [self mutableArrayValueForKey:@"titles"];
}

- (NSUInteger)countOfTitles {
	return [_titles count];
}

- (id)objectInTitlesAtIndex:(NSUInteger)index {
    return [_titles objectAtIndex:index];
}
 
- (void)insertObject:(GCProperty *)obj inTitlesAtIndex:(NSUInteger)index {
	NSParameterAssert([obj isKindOfClass:[GCTitleAttribute class]]);
	
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] removeObjectFromTitlesAtIndex:index];
	[self.context.undoManager setActionName:@"Undo titles"]; //TODO
	
	if (obj.describedObject == self) {
		return;
	}
	if (obj.describedObject) {
		[obj.describedObject.mutableProperties removeObject:obj];
	}
	obj.describedObject = self;
    [_titles insertObject:obj atIndex:index];
}

- (void)removeObjectFromTitlesAtIndex:(NSUInteger)index {
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] insertObject:_titles[index] inTitlesAtIndex:index];
	[self.context.undoManager setActionName:@"Undo titles"]; //TODO
	
	((GCProperty *)_titles[index]).describedObject = nil;
	
    [_titles removeObjectAtIndex:index];
}
	
@dynamic individualLDSOrdinances;

- (NSMutableArray *)mutableLDSBaptisms {
    return [self mutableArrayValueForKey:@"lDSBaptisms"];
}

- (NSUInteger)countOfLDSBaptisms {
	return [_lDSBaptisms count];
}

- (id)objectInLDSBaptismsAtIndex:(NSUInteger)index {
    return [_lDSBaptisms objectAtIndex:index];
}
 
- (void)insertObject:(GCProperty *)obj inLDSBaptismsAtIndex:(NSUInteger)index {
	NSParameterAssert([obj isKindOfClass:[GCLDSBaptismAttribute class]]);
	
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] removeObjectFromLDSBaptismsAtIndex:index];
	[self.context.undoManager setActionName:@"Undo lDSBaptisms"]; //TODO
	
	if (obj.describedObject == self) {
		return;
	}
	if (obj.describedObject) {
		[obj.describedObject.mutableProperties removeObject:obj];
	}
	obj.describedObject = self;
    [_lDSBaptisms insertObject:obj atIndex:index];
}

- (void)removeObjectFromLDSBaptismsAtIndex:(NSUInteger)index {
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] insertObject:_lDSBaptisms[index] inLDSBaptismsAtIndex:index];
	[self.context.undoManager setActionName:@"Undo lDSBaptisms"]; //TODO
	
	((GCProperty *)_lDSBaptisms[index]).describedObject = nil;
	
    [_lDSBaptisms removeObjectAtIndex:index];
}
	

- (NSMutableArray *)mutableLDSConfirmations {
    return [self mutableArrayValueForKey:@"lDSConfirmations"];
}

- (NSUInteger)countOfLDSConfirmations {
	return [_lDSConfirmations count];
}

- (id)objectInLDSConfirmationsAtIndex:(NSUInteger)index {
    return [_lDSConfirmations objectAtIndex:index];
}
 
- (void)insertObject:(GCProperty *)obj inLDSConfirmationsAtIndex:(NSUInteger)index {
	NSParameterAssert([obj isKindOfClass:[GCLDSConfirmationAttribute class]]);
	
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] removeObjectFromLDSConfirmationsAtIndex:index];
	[self.context.undoManager setActionName:@"Undo lDSConfirmations"]; //TODO
	
	if (obj.describedObject == self) {
		return;
	}
	if (obj.describedObject) {
		[obj.describedObject.mutableProperties removeObject:obj];
	}
	obj.describedObject = self;
    [_lDSConfirmations insertObject:obj atIndex:index];
}

- (void)removeObjectFromLDSConfirmationsAtIndex:(NSUInteger)index {
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] insertObject:_lDSConfirmations[index] inLDSConfirmationsAtIndex:index];
	[self.context.undoManager setActionName:@"Undo lDSConfirmations"]; //TODO
	
	((GCProperty *)_lDSConfirmations[index]).describedObject = nil;
	
    [_lDSConfirmations removeObjectAtIndex:index];
}
	

- (NSMutableArray *)mutableLDSEndowments {
    return [self mutableArrayValueForKey:@"lDSEndowments"];
}

- (NSUInteger)countOfLDSEndowments {
	return [_lDSEndowments count];
}

- (id)objectInLDSEndowmentsAtIndex:(NSUInteger)index {
    return [_lDSEndowments objectAtIndex:index];
}
 
- (void)insertObject:(GCProperty *)obj inLDSEndowmentsAtIndex:(NSUInteger)index {
	NSParameterAssert([obj isKindOfClass:[GCLDSEndowmentAttribute class]]);
	
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] removeObjectFromLDSEndowmentsAtIndex:index];
	[self.context.undoManager setActionName:@"Undo lDSEndowments"]; //TODO
	
	if (obj.describedObject == self) {
		return;
	}
	if (obj.describedObject) {
		[obj.describedObject.mutableProperties removeObject:obj];
	}
	obj.describedObject = self;
    [_lDSEndowments insertObject:obj atIndex:index];
}

- (void)removeObjectFromLDSEndowmentsAtIndex:(NSUInteger)index {
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] insertObject:_lDSEndowments[index] inLDSEndowmentsAtIndex:index];
	[self.context.undoManager setActionName:@"Undo lDSEndowments"]; //TODO
	
	((GCProperty *)_lDSEndowments[index]).describedObject = nil;
	
    [_lDSEndowments removeObjectAtIndex:index];
}
	

- (NSMutableArray *)mutableLDSSealingChilds {
    return [self mutableArrayValueForKey:@"lDSSealingChilds"];
}

- (NSUInteger)countOfLDSSealingChilds {
	return [_lDSSealingChilds count];
}

- (id)objectInLDSSealingChildsAtIndex:(NSUInteger)index {
    return [_lDSSealingChilds objectAtIndex:index];
}
 
- (void)insertObject:(GCProperty *)obj inLDSSealingChildsAtIndex:(NSUInteger)index {
	NSParameterAssert([obj isKindOfClass:[GCLDSSealingChildAttribute class]]);
	
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] removeObjectFromLDSSealingChildsAtIndex:index];
	[self.context.undoManager setActionName:@"Undo lDSSealingChilds"]; //TODO
	
	if (obj.describedObject == self) {
		return;
	}
	if (obj.describedObject) {
		[obj.describedObject.mutableProperties removeObject:obj];
	}
	obj.describedObject = self;
    [_lDSSealingChilds insertObject:obj atIndex:index];
}

- (void)removeObjectFromLDSSealingChildsAtIndex:(NSUInteger)index {
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] insertObject:_lDSSealingChilds[index] inLDSSealingChildsAtIndex:index];
	[self.context.undoManager setActionName:@"Undo lDSSealingChilds"]; //TODO
	
	((GCProperty *)_lDSSealingChilds[index]).describedObject = nil;
	
    [_lDSSealingChilds removeObjectAtIndex:index];
}
	

- (NSMutableArray *)mutableChildInFamilies {
    return [self mutableArrayValueForKey:@"childInFamilies"];
}

- (NSUInteger)countOfChildInFamilies {
	return [_childInFamilies count];
}

- (id)objectInChildInFamiliesAtIndex:(NSUInteger)index {
    return [_childInFamilies objectAtIndex:index];
}
 
- (void)insertObject:(GCProperty *)obj inChildInFamiliesAtIndex:(NSUInteger)index {
	NSParameterAssert([obj isKindOfClass:[GCChildInFamilyRelationship class]]);
	
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] removeObjectFromChildInFamiliesAtIndex:index];
	[self.context.undoManager setActionName:@"Undo childInFamilies"]; //TODO
	
	if (obj.describedObject == self) {
		return;
	}
	if (obj.describedObject) {
		[obj.describedObject.mutableProperties removeObject:obj];
	}
	obj.describedObject = self;
    [_childInFamilies insertObject:obj atIndex:index];
}

- (void)removeObjectFromChildInFamiliesAtIndex:(NSUInteger)index {
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] insertObject:_childInFamilies[index] inChildInFamiliesAtIndex:index];
	[self.context.undoManager setActionName:@"Undo childInFamilies"]; //TODO
	
	((GCProperty *)_childInFamilies[index]).describedObject = nil;
	
    [_childInFamilies removeObjectAtIndex:index];
}
	

- (NSMutableArray *)mutableSpouseInFamilies {
    return [self mutableArrayValueForKey:@"spouseInFamilies"];
}

- (NSUInteger)countOfSpouseInFamilies {
	return [_spouseInFamilies count];
}

- (id)objectInSpouseInFamiliesAtIndex:(NSUInteger)index {
    return [_spouseInFamilies objectAtIndex:index];
}
 
- (void)insertObject:(GCProperty *)obj inSpouseInFamiliesAtIndex:(NSUInteger)index {
	NSParameterAssert([obj isKindOfClass:[GCSpouseInFamilyRelationship class]]);
	
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] removeObjectFromSpouseInFamiliesAtIndex:index];
	[self.context.undoManager setActionName:@"Undo spouseInFamilies"]; //TODO
	
	if (obj.describedObject == self) {
		return;
	}
	if (obj.describedObject) {
		[obj.describedObject.mutableProperties removeObject:obj];
	}
	obj.describedObject = self;
    [_spouseInFamilies insertObject:obj atIndex:index];
}

- (void)removeObjectFromSpouseInFamiliesAtIndex:(NSUInteger)index {
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] insertObject:_spouseInFamilies[index] inSpouseInFamiliesAtIndex:index];
	[self.context.undoManager setActionName:@"Undo spouseInFamilies"]; //TODO
	
	((GCProperty *)_spouseInFamilies[index]).describedObject = nil;
	
    [_spouseInFamilies removeObjectAtIndex:index];
}
	

- (NSMutableArray *)mutableSubmitterReferences {
    return [self mutableArrayValueForKey:@"submitterReferences"];
}

- (NSUInteger)countOfSubmitterReferences {
	return [_submitterReferences count];
}

- (id)objectInSubmitterReferencesAtIndex:(NSUInteger)index {
    return [_submitterReferences objectAtIndex:index];
}
 
- (void)insertObject:(GCProperty *)obj inSubmitterReferencesAtIndex:(NSUInteger)index {
	NSParameterAssert([obj isKindOfClass:[GCSubmitterReferenceRelationship class]]);
	
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] removeObjectFromSubmitterReferencesAtIndex:index];
	[self.context.undoManager setActionName:@"Undo submitterReferences"]; //TODO
	
	if (obj.describedObject == self) {
		return;
	}
	if (obj.describedObject) {
		[obj.describedObject.mutableProperties removeObject:obj];
	}
	obj.describedObject = self;
    [_submitterReferences insertObject:obj atIndex:index];
}

- (void)removeObjectFromSubmitterReferencesAtIndex:(NSUInteger)index {
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] insertObject:_submitterReferences[index] inSubmitterReferencesAtIndex:index];
	[self.context.undoManager setActionName:@"Undo submitterReferences"]; //TODO
	
	((GCProperty *)_submitterReferences[index]).describedObject = nil;
	
    [_submitterReferences removeObjectAtIndex:index];
}
	

- (NSMutableArray *)mutableAssociations {
    return [self mutableArrayValueForKey:@"associations"];
}

- (NSUInteger)countOfAssociations {
	return [_associations count];
}

- (id)objectInAssociationsAtIndex:(NSUInteger)index {
    return [_associations objectAtIndex:index];
}
 
- (void)insertObject:(GCProperty *)obj inAssociationsAtIndex:(NSUInteger)index {
	NSParameterAssert([obj isKindOfClass:[GCAssociationRelationship class]]);
	
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] removeObjectFromAssociationsAtIndex:index];
	[self.context.undoManager setActionName:@"Undo associations"]; //TODO
	
	if (obj.describedObject == self) {
		return;
	}
	if (obj.describedObject) {
		[obj.describedObject.mutableProperties removeObject:obj];
	}
	obj.describedObject = self;
    [_associations insertObject:obj atIndex:index];
}

- (void)removeObjectFromAssociationsAtIndex:(NSUInteger)index {
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] insertObject:_associations[index] inAssociationsAtIndex:index];
	[self.context.undoManager setActionName:@"Undo associations"]; //TODO
	
	((GCProperty *)_associations[index]).describedObject = nil;
	
    [_associations removeObjectAtIndex:index];
}
	

- (NSMutableArray *)mutableAliases {
    return [self mutableArrayValueForKey:@"aliases"];
}

- (NSUInteger)countOfAliases {
	return [_aliases count];
}

- (id)objectInAliasesAtIndex:(NSUInteger)index {
    return [_aliases objectAtIndex:index];
}
 
- (void)insertObject:(GCProperty *)obj inAliasesAtIndex:(NSUInteger)index {
	NSParameterAssert([obj isKindOfClass:[GCAliasRelationship class]]);
	
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] removeObjectFromAliasesAtIndex:index];
	[self.context.undoManager setActionName:@"Undo aliases"]; //TODO
	
	if (obj.describedObject == self) {
		return;
	}
	if (obj.describedObject) {
		[obj.describedObject.mutableProperties removeObject:obj];
	}
	obj.describedObject = self;
    [_aliases insertObject:obj atIndex:index];
}

- (void)removeObjectFromAliasesAtIndex:(NSUInteger)index {
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] insertObject:_aliases[index] inAliasesAtIndex:index];
	[self.context.undoManager setActionName:@"Undo aliases"]; //TODO
	
	((GCProperty *)_aliases[index]).describedObject = nil;
	
    [_aliases removeObjectAtIndex:index];
}
	

- (NSMutableArray *)mutableAncestorInterests {
    return [self mutableArrayValueForKey:@"ancestorInterests"];
}

- (NSUInteger)countOfAncestorInterests {
	return [_ancestorInterests count];
}

- (id)objectInAncestorInterestsAtIndex:(NSUInteger)index {
    return [_ancestorInterests objectAtIndex:index];
}
 
- (void)insertObject:(GCProperty *)obj inAncestorInterestsAtIndex:(NSUInteger)index {
	NSParameterAssert([obj isKindOfClass:[GCAncestorInterestRelationship class]]);
	
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] removeObjectFromAncestorInterestsAtIndex:index];
	[self.context.undoManager setActionName:@"Undo ancestorInterests"]; //TODO
	
	if (obj.describedObject == self) {
		return;
	}
	if (obj.describedObject) {
		[obj.describedObject.mutableProperties removeObject:obj];
	}
	obj.describedObject = self;
    [_ancestorInterests insertObject:obj atIndex:index];
}

- (void)removeObjectFromAncestorInterestsAtIndex:(NSUInteger)index {
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] insertObject:_ancestorInterests[index] inAncestorInterestsAtIndex:index];
	[self.context.undoManager setActionName:@"Undo ancestorInterests"]; //TODO
	
	((GCProperty *)_ancestorInterests[index]).describedObject = nil;
	
    [_ancestorInterests removeObjectAtIndex:index];
}
	

- (NSMutableArray *)mutableDescendantInterests {
    return [self mutableArrayValueForKey:@"descendantInterests"];
}

- (NSUInteger)countOfDescendantInterests {
	return [_descendantInterests count];
}

- (id)objectInDescendantInterestsAtIndex:(NSUInteger)index {
    return [_descendantInterests objectAtIndex:index];
}
 
- (void)insertObject:(GCProperty *)obj inDescendantInterestsAtIndex:(NSUInteger)index {
	NSParameterAssert([obj isKindOfClass:[GCDescendantInterestRelationship class]]);
	
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] removeObjectFromDescendantInterestsAtIndex:index];
	[self.context.undoManager setActionName:@"Undo descendantInterests"]; //TODO
	
	if (obj.describedObject == self) {
		return;
	}
	if (obj.describedObject) {
		[obj.describedObject.mutableProperties removeObject:obj];
	}
	obj.describedObject = self;
    [_descendantInterests insertObject:obj atIndex:index];
}

- (void)removeObjectFromDescendantInterestsAtIndex:(NSUInteger)index {
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] insertObject:_descendantInterests[index] inDescendantInterestsAtIndex:index];
	[self.context.undoManager setActionName:@"Undo descendantInterests"]; //TODO
	
	((GCProperty *)_descendantInterests[index]).describedObject = nil;
	
    [_descendantInterests removeObjectAtIndex:index];
}
	
@dynamic sources;

- (NSMutableArray *)mutableSourceCitations {
    return [self mutableArrayValueForKey:@"sourceCitations"];
}

- (NSUInteger)countOfSourceCitations {
	return [_sourceCitations count];
}

- (id)objectInSourceCitationsAtIndex:(NSUInteger)index {
    return [_sourceCitations objectAtIndex:index];
}
 
- (void)insertObject:(GCProperty *)obj inSourceCitationsAtIndex:(NSUInteger)index {
	NSParameterAssert([obj isKindOfClass:[GCSourceCitationRelationship class]]);
	
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] removeObjectFromSourceCitationsAtIndex:index];
	[self.context.undoManager setActionName:@"Undo sourceCitations"]; //TODO
	
	if (obj.describedObject == self) {
		return;
	}
	if (obj.describedObject) {
		[obj.describedObject.mutableProperties removeObject:obj];
	}
	obj.describedObject = self;
    [_sourceCitations insertObject:obj atIndex:index];
}

- (void)removeObjectFromSourceCitationsAtIndex:(NSUInteger)index {
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] insertObject:_sourceCitations[index] inSourceCitationsAtIndex:index];
	[self.context.undoManager setActionName:@"Undo sourceCitations"]; //TODO
	
	((GCProperty *)_sourceCitations[index]).describedObject = nil;
	
    [_sourceCitations removeObjectAtIndex:index];
}
	

- (NSMutableArray *)mutableSourceEmbeddeds {
    return [self mutableArrayValueForKey:@"sourceEmbeddeds"];
}

- (NSUInteger)countOfSourceEmbeddeds {
	return [_sourceEmbeddeds count];
}

- (id)objectInSourceEmbeddedsAtIndex:(NSUInteger)index {
    return [_sourceEmbeddeds objectAtIndex:index];
}
 
- (void)insertObject:(GCProperty *)obj inSourceEmbeddedsAtIndex:(NSUInteger)index {
	NSParameterAssert([obj isKindOfClass:[GCSourceEmbeddedAttribute class]]);
	
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] removeObjectFromSourceEmbeddedsAtIndex:index];
	[self.context.undoManager setActionName:@"Undo sourceEmbeddeds"]; //TODO
	
	if (obj.describedObject == self) {
		return;
	}
	if (obj.describedObject) {
		[obj.describedObject.mutableProperties removeObject:obj];
	}
	obj.describedObject = self;
    [_sourceEmbeddeds insertObject:obj atIndex:index];
}

- (void)removeObjectFromSourceEmbeddedsAtIndex:(NSUInteger)index {
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] insertObject:_sourceEmbeddeds[index] inSourceEmbeddedsAtIndex:index];
	[self.context.undoManager setActionName:@"Undo sourceEmbeddeds"]; //TODO
	
	((GCProperty *)_sourceEmbeddeds[index]).describedObject = nil;
	
    [_sourceEmbeddeds removeObjectAtIndex:index];
}
	
@dynamic multimedias;

- (NSMutableArray *)mutableMultimediaReferences {
    return [self mutableArrayValueForKey:@"multimediaReferences"];
}

- (NSUInteger)countOfMultimediaReferences {
	return [_multimediaReferences count];
}

- (id)objectInMultimediaReferencesAtIndex:(NSUInteger)index {
    return [_multimediaReferences objectAtIndex:index];
}
 
- (void)insertObject:(GCProperty *)obj inMultimediaReferencesAtIndex:(NSUInteger)index {
	NSParameterAssert([obj isKindOfClass:[GCMultimediaReferenceRelationship class]]);
	
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] removeObjectFromMultimediaReferencesAtIndex:index];
	[self.context.undoManager setActionName:@"Undo multimediaReferences"]; //TODO
	
	if (obj.describedObject == self) {
		return;
	}
	if (obj.describedObject) {
		[obj.describedObject.mutableProperties removeObject:obj];
	}
	obj.describedObject = self;
    [_multimediaReferences insertObject:obj atIndex:index];
}

- (void)removeObjectFromMultimediaReferencesAtIndex:(NSUInteger)index {
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] insertObject:_multimediaReferences[index] inMultimediaReferencesAtIndex:index];
	[self.context.undoManager setActionName:@"Undo multimediaReferences"]; //TODO
	
	((GCProperty *)_multimediaReferences[index]).describedObject = nil;
	
    [_multimediaReferences removeObjectAtIndex:index];
}
	

- (NSMutableArray *)mutableMultimediaEmbeddeds {
    return [self mutableArrayValueForKey:@"multimediaEmbeddeds"];
}

- (NSUInteger)countOfMultimediaEmbeddeds {
	return [_multimediaEmbeddeds count];
}

- (id)objectInMultimediaEmbeddedsAtIndex:(NSUInteger)index {
    return [_multimediaEmbeddeds objectAtIndex:index];
}
 
- (void)insertObject:(GCProperty *)obj inMultimediaEmbeddedsAtIndex:(NSUInteger)index {
	NSParameterAssert([obj isKindOfClass:[GCMultimediaEmbeddedAttribute class]]);
	
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] removeObjectFromMultimediaEmbeddedsAtIndex:index];
	[self.context.undoManager setActionName:@"Undo multimediaEmbeddeds"]; //TODO
	
	if (obj.describedObject == self) {
		return;
	}
	if (obj.describedObject) {
		[obj.describedObject.mutableProperties removeObject:obj];
	}
	obj.describedObject = self;
    [_multimediaEmbeddeds insertObject:obj atIndex:index];
}

- (void)removeObjectFromMultimediaEmbeddedsAtIndex:(NSUInteger)index {
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] insertObject:_multimediaEmbeddeds[index] inMultimediaEmbeddedsAtIndex:index];
	[self.context.undoManager setActionName:@"Undo multimediaEmbeddeds"]; //TODO
	
	((GCProperty *)_multimediaEmbeddeds[index]).describedObject = nil;
	
    [_multimediaEmbeddeds removeObjectAtIndex:index];
}
	
@dynamic notes;

- (NSMutableArray *)mutableNoteReferences {
    return [self mutableArrayValueForKey:@"noteReferences"];
}

- (NSUInteger)countOfNoteReferences {
	return [_noteReferences count];
}

- (id)objectInNoteReferencesAtIndex:(NSUInteger)index {
    return [_noteReferences objectAtIndex:index];
}
 
- (void)insertObject:(GCProperty *)obj inNoteReferencesAtIndex:(NSUInteger)index {
	NSParameterAssert([obj isKindOfClass:[GCNoteReferenceRelationship class]]);
	
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] removeObjectFromNoteReferencesAtIndex:index];
	[self.context.undoManager setActionName:@"Undo noteReferences"]; //TODO
	
	if (obj.describedObject == self) {
		return;
	}
	if (obj.describedObject) {
		[obj.describedObject.mutableProperties removeObject:obj];
	}
	obj.describedObject = self;
    [_noteReferences insertObject:obj atIndex:index];
}

- (void)removeObjectFromNoteReferencesAtIndex:(NSUInteger)index {
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] insertObject:_noteReferences[index] inNoteReferencesAtIndex:index];
	[self.context.undoManager setActionName:@"Undo noteReferences"]; //TODO
	
	((GCProperty *)_noteReferences[index]).describedObject = nil;
	
    [_noteReferences removeObjectAtIndex:index];
}
	

- (NSMutableArray *)mutableNoteEmbeddeds {
    return [self mutableArrayValueForKey:@"noteEmbeddeds"];
}

- (NSUInteger)countOfNoteEmbeddeds {
	return [_noteEmbeddeds count];
}

- (id)objectInNoteEmbeddedsAtIndex:(NSUInteger)index {
    return [_noteEmbeddeds objectAtIndex:index];
}
 
- (void)insertObject:(GCProperty *)obj inNoteEmbeddedsAtIndex:(NSUInteger)index {
	NSParameterAssert([obj isKindOfClass:[GCNoteEmbeddedAttribute class]]);
	
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] removeObjectFromNoteEmbeddedsAtIndex:index];
	[self.context.undoManager setActionName:@"Undo noteEmbeddeds"]; //TODO
	
	if (obj.describedObject == self) {
		return;
	}
	if (obj.describedObject) {
		[obj.describedObject.mutableProperties removeObject:obj];
	}
	obj.describedObject = self;
    [_noteEmbeddeds insertObject:obj atIndex:index];
}

- (void)removeObjectFromNoteEmbeddedsAtIndex:(NSUInteger)index {
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] insertObject:_noteEmbeddeds[index] inNoteEmbeddedsAtIndex:index];
	[self.context.undoManager setActionName:@"Undo noteEmbeddeds"]; //TODO
	
	((GCProperty *)_noteEmbeddeds[index]).describedObject = nil;
	
    [_noteEmbeddeds removeObjectAtIndex:index];
}
	

- (NSMutableArray *)mutableRecordFileNumbers {
    return [self mutableArrayValueForKey:@"recordFileNumbers"];
}

- (NSUInteger)countOfRecordFileNumbers {
	return [_recordFileNumbers count];
}

- (id)objectInRecordFileNumbersAtIndex:(NSUInteger)index {
    return [_recordFileNumbers objectAtIndex:index];
}
 
- (void)insertObject:(GCProperty *)obj inRecordFileNumbersAtIndex:(NSUInteger)index {
	NSParameterAssert([obj isKindOfClass:[GCRecordFileNumberAttribute class]]);
	
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] removeObjectFromRecordFileNumbersAtIndex:index];
	[self.context.undoManager setActionName:@"Undo recordFileNumbers"]; //TODO
	
	if (obj.describedObject == self) {
		return;
	}
	if (obj.describedObject) {
		[obj.describedObject.mutableProperties removeObject:obj];
	}
	obj.describedObject = self;
    [_recordFileNumbers insertObject:obj atIndex:index];
}

- (void)removeObjectFromRecordFileNumbersAtIndex:(NSUInteger)index {
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] insertObject:_recordFileNumbers[index] inRecordFileNumbersAtIndex:index];
	[self.context.undoManager setActionName:@"Undo recordFileNumbers"]; //TODO
	
	((GCProperty *)_recordFileNumbers[index]).describedObject = nil;
	
    [_recordFileNumbers removeObjectAtIndex:index];
}
	

- (NSMutableArray *)mutableAncestralFileNumbers {
    return [self mutableArrayValueForKey:@"ancestralFileNumbers"];
}

- (NSUInteger)countOfAncestralFileNumbers {
	return [_ancestralFileNumbers count];
}

- (id)objectInAncestralFileNumbersAtIndex:(NSUInteger)index {
    return [_ancestralFileNumbers objectAtIndex:index];
}
 
- (void)insertObject:(GCProperty *)obj inAncestralFileNumbersAtIndex:(NSUInteger)index {
	NSParameterAssert([obj isKindOfClass:[GCAncestralFileNumberAttribute class]]);
	
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] removeObjectFromAncestralFileNumbersAtIndex:index];
	[self.context.undoManager setActionName:@"Undo ancestralFileNumbers"]; //TODO
	
	if (obj.describedObject == self) {
		return;
	}
	if (obj.describedObject) {
		[obj.describedObject.mutableProperties removeObject:obj];
	}
	obj.describedObject = self;
    [_ancestralFileNumbers insertObject:obj atIndex:index];
}

- (void)removeObjectFromAncestralFileNumbersAtIndex:(NSUInteger)index {
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] insertObject:_ancestralFileNumbers[index] inAncestralFileNumbersAtIndex:index];
	[self.context.undoManager setActionName:@"Undo ancestralFileNumbers"]; //TODO
	
	((GCProperty *)_ancestralFileNumbers[index]).describedObject = nil;
	
    [_ancestralFileNumbers removeObjectAtIndex:index];
}
	

- (NSMutableArray *)mutableUserReferenceNumbers {
    return [self mutableArrayValueForKey:@"userReferenceNumbers"];
}

- (NSUInteger)countOfUserReferenceNumbers {
	return [_userReferenceNumbers count];
}

- (id)objectInUserReferenceNumbersAtIndex:(NSUInteger)index {
    return [_userReferenceNumbers objectAtIndex:index];
}
 
- (void)insertObject:(GCProperty *)obj inUserReferenceNumbersAtIndex:(NSUInteger)index {
	NSParameterAssert([obj isKindOfClass:[GCUserReferenceNumberAttribute class]]);
	
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] removeObjectFromUserReferenceNumbersAtIndex:index];
	[self.context.undoManager setActionName:@"Undo userReferenceNumbers"]; //TODO
	
	if (obj.describedObject == self) {
		return;
	}
	if (obj.describedObject) {
		[obj.describedObject.mutableProperties removeObject:obj];
	}
	obj.describedObject = self;
    [_userReferenceNumbers insertObject:obj atIndex:index];
}

- (void)removeObjectFromUserReferenceNumbersAtIndex:(NSUInteger)index {
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] insertObject:_userReferenceNumbers[index] inUserReferenceNumbersAtIndex:index];
	[self.context.undoManager setActionName:@"Undo userReferenceNumbers"]; //TODO
	
	((GCProperty *)_userReferenceNumbers[index]).describedObject = nil;
	
    [_userReferenceNumbers removeObjectAtIndex:index];
}
	

- (void)setRecordIdNumber:(GCProperty *)obj
{
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] setRecordIdNumber:_recordIdNumber];
	[self.context.undoManager setActionName:@"Undo recordIdNumber"]; //TODO
	
	if (_recordIdNumber) {
		obj.describedObject = nil;
	}
	
	if (obj.describedObject) {
		[obj.describedObject.mutableProperties removeObject:obj];
	}
	
	obj.describedObject = self;
	
	_recordIdNumber = (id)obj;
}

- (GCRecordIdNumberAttribute *)recordIdNumber
{
	return _recordIdNumber;
}


- (void)setChangeInfo:(GCProperty *)obj
{
	[(GCIndividualEntity *)[self.context.undoManager prepareWithInvocationTarget:self] setChangeInfo:_changeInfo];
	[self.context.undoManager setActionName:@"Undo changeInfo"]; //TODO
	
	if (_changeInfo) {
		obj.describedObject = nil;
	}
	
	if (obj.describedObject) {
		[obj.describedObject.mutableProperties removeObject:obj];
	}
	
	obj.describedObject = self;
	
	_changeInfo = (id)obj;
}

- (GCChangeInfoAttribute *)changeInfo
{
	return _changeInfo;
}


@end

