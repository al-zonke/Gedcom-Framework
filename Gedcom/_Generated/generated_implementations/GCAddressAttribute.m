/*
 This file was autogenerated by tags.py 
 */

#import "GCAddressAttribute.h"

#import "GCAddressLine1Attribute.h"
#import "GCAddressLine2Attribute.h"
#import "GCCityAttribute.h"
#import "GCCountryAttribute.h"
#import "GCPostalCodeAttribute.h"
#import "GCStateAttribute.h"

@implementation GCAddressAttribute {
	GCAddressLine1Attribute *_addressLine1;
	GCAddressLine2Attribute *_addressLine2;
	GCCityAttribute *_city;
	GCStateAttribute *_state;
	GCPostalCodeAttribute *_postalCode;
	GCCountryAttribute *_country;
}

// Methods:
/// @name Initializing

/** Initializes and returns a address.

 
 @return A new address.
*/
+(instancetype)address
{
	return [[self alloc] init];
}
/// @name Initializing

/** Initializes and returns a address.

 @param value The value as a GCValue object.
 @return A new address.
*/
+(instancetype)addressWithValue:(GCValue *)value
{
	return [[self alloc] initWithValue:value];
}
/// @name Initializing

/** Initializes and returns a address.

 @param value The value as an NSString.
 @return A new address.
*/
+(instancetype)addressWithGedcomStringValue:(NSString *)value
{
	return [[self alloc] initWithGedcomStringValue:value];
}
- (instancetype)init
{
	self = [super init];
	
	if (self) {
		// initialize ivars, if any:

	}
	
	return self;
}


// Properties:
@dynamic addressLine1;
@dynamic addressLine2;
@dynamic city;
@dynamic state;
@dynamic postalCode;
@dynamic country;

@end
