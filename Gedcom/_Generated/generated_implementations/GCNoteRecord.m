/*
 This file was autogenerated by tags.py 
 */

#import "GCNoteRecord.h"

#import "GCObject_internal.h"

#import "GCChangeInfoAttribute.h"
#import "GCRecordIdNumberAttribute.h"
#import "GCSourceCitationRelationship.h"
#import "GCSourceEmbeddedAttribute.h"
#import "GCUserReferenceNumberAttribute.h"

@implementation GCNoteRecord {
	NSMutableArray *_sourceCitations;
	NSMutableArray *_sourceEmbeddeds;
	NSMutableArray *_userReferenceNumbers;
	GCRecordIdNumberAttribute *_recordIdNumber;
	GCChangeInfoAttribute *_changeInfo;
}

// Methods:
/** Initializes and returns a note.

 @param context The context in which to create the entity.
 @return A new note.
*/
+(instancetype)noteInContext:(GCContext *)context
{
	return [[self alloc] initInContext:context];
}
- (instancetype)initInContext:(GCContext *)context
{
	self = [super initInContext:context];
	
	if (self) {
		// initialize ivars, if any:
		_sourceCitations = [NSMutableArray array];
		_sourceEmbeddeds = [NSMutableArray array];
		_userReferenceNumbers = [NSMutableArray array];
	}
	
	return self;
}


// Properties:
@dynamic sources;
@synthesize sourceCitations = _sourceCitations;

- (NSMutableArray *)mutableSourceCitations
{
	return [self mutableArrayValueForKey:@"sourceCitations"];
}

@synthesize sourceEmbeddeds = _sourceEmbeddeds;

- (NSMutableArray *)mutableSourceEmbeddeds
{
	return [self mutableArrayValueForKey:@"sourceEmbeddeds"];
}

@synthesize userReferenceNumbers = _userReferenceNumbers;

- (NSMutableArray *)mutableUserReferenceNumbers
{
	return [self mutableArrayValueForKey:@"userReferenceNumbers"];
}

@dynamic recordIdNumber;
@dynamic changeInfo;

@end

